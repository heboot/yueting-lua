<?xml version="1.0" encoding="UTF-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2013, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
 == | Desc: 帮助
 == ============================================================================
-->
<root>
    <header/>
    <body BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent" resolution="720,1280">
    <node name="mainNode" rect="0,0,720,1280" extendstyle="1111" layouttype="1" OnKeyUp="mainNodeOnKeyUp">
        <node name="mianTopNode" rect="0,0,720,90"  extendstyle="1111">
		   <image rect="0,0,0,0" style="autosize" src="file://image/top_bg.png" extendstyle="1077"/>
		   <button name="backBtn" normal="n" sel="s" rect="10,15,104,61" extendstyle="1111" OnSelect="backBtnOnSelect" visible="1" enable="1">
			<image name="n" rect="0,0,0,0"  style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
			<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		    <label rect="0,0,104,61" extendstyle="1111" text="返回" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
			</button>
            <label name="mainTitle" rect="0,0,720,77" extendstyle="1110" text="" color="#FFFFFF" v-align="center" h-align="center" font-size="35"/>
			<button name="moreContentsBtn" normal="n" sel="s" rect="610,15,96,59" extendstyle="1111" OnSelect="moreContentsBtnOnSelect" visible="1" enable="1">
			<image name="n"  rect="0,0,0,0" style="autosize" src="file://image/radioMoreContens.png" extendstyle="1077"/>
			<image name="s"  rect="0,0,0,0" style="autosize" src="file://image/radioMoreContens_s.png" extendstyle="1077"/>
			</button>
        </node> 
		
		  
		
        <node rect="0,90,0,508"  extendstyle="1171" font-family="TianyiDigital">
		  <image rect="0,0,0,0" style="minsize" src="file://image/playyue_bg.png" extendstyle="1077"/>
		  <node rect="0,0,0,150"  extendstyle="1071">
		      <!--<shadow rect="0,0,0,0" color="#FFFFFF" alpha="125" extendstyle="1077"/>-->
			  <image name="wifiFlag" rect="81,0,106,48" style="autosize" src="" extendstyle="1511"/>
			  <node name="startTimeNode" rect="285,0,435,105" extendstyle="1510" visible="1" enable="0" >
			  <label  name="audioStartTime"  rect="0,0,200,105" color="#f06a06" text="00:00" font-size="75" extendstyle="1511"/>
			  <label  rect="0,0,80,70" color="#f06a06" text=":00" font-size="50" extendstyle="8511"/>
			  <label  rect="0,0,100,50" color="#f06a06" text="开始" font-size="30" extendstyle="8511"/>
			  </node>
		  </node>
		  <node rect="0,0,0,170"  extendstyle="1870">
		     <!--<shadow rect="0,0,0,0" color="#FFFFFF" alpha="125" extendstyle="1077"/>-->
			 <node name="playingAnimation" rect="0,0,170,170" extendstyle="1010" visible="0" enable="0">
			    <animate rect="0,0,170,170" delay="15" loop="true" extendstyle="0000">
                <animate-frame start="$(start)" delay="$(delay)">
                <image rect="$(rect)"  alpha="50" style="autosize" src="file://image/playing_1.png" extendstyle="0000"/>
                </animate-frame>
                <dataset>  			
			    <set rect="53,38,150,150" start="0" delay="8" src="file://image/playing_1.png" />
			    <set rect="42,29,170,170" start="4" delay="4" src="file://image/playing_2.png" />
                </dataset>
                </animate>	
			 </node>
			 <button name="playBtn" rect="58,44,138,138" extendstyle="1010"  OnSelect="playBtnOnSelect" visible="1" enable="1">
			    <image rect="0,0,0,0" style="autosize" src="file://image/playbackground.png" extendstyle="1177"/>
			 </button>
			 <button name="pauseBtn" rect="58,44,138,138" extendstyle="1010"  OnSelect="pauseBtnOnSelect" visible="0" enable="0">
			    <image rect="0,0,0,0" style="autosize" src="file://image/pausebackground.png" extendstyle="1177"/>
			 </button>
			 <node name="refreshAnimation" rect="58,44,138,138" extendstyle="1010"  visible="0" enable="0">
			    <animate rect="0,0,138,138" delay="24" loop="true" extendstyle="0000">
                <animate-frame start="$(start)" delay="1">
                <image rect="0,0,138,138" rotate="$(rotate)" style="autosize" src="file://image/refreshbackgroung.png" extendstyle="0000"/>
             </animate-frame>
              <dataset>  			
			    <set start="0" rotate="345"/><set start="1" rotate="330"/><set start="2" rotate="315"/><set start="3" rotate="300"/>
			    <set start="4" rotate="285"/><set start="5" rotate="270"/><set start="6" rotate="255"/><set start="7" rotate="240"/>
			    <set start="8" rotate="225"/><set start="9" rotate="210"/><set start="10" rotate="195"/><set start="11" rotate="180"/>
			    <set start="12" rotate="165"/><set start="13" rotate="150"/><set start="14" rotate="135"/><set start="15" rotate="120"/>
			    <set start="16" rotate="105"/><set start="17" rotate="90"/><set start="18" rotate="75"/><set start="19" rotate="60"/>
			    <set start="20" rotate="45"/><set start="21" rotate="30"/><set start="22" rotate="15"/><set start="23" rotate="360"/>
              </dataset>
                </animate>	
			 </node>
			 <node rect="0,0,570,0" extendstyle="8017">
               <scrolltext name="audioname" rect="90,70,0,90" color="#f06a06" text="暂无数据"  step="2" scroll="true" font-size="40" extendstyle="1171"/>
			   <node name="endTimeNode" rect="90,180,0,90" extendstyle="1171" visible="1" enable="0" >
			    <label  name="audioEndTime" rect="0,0,200,105" color="#f06a06" text="00:00" font-size="75" extendstyle="1511"/>
			    <label  rect="0,0,80,70" color="#f06a06" text=":00" font-size="50" extendstyle="8511"/>
			    <label  rect="0,0,100,50" color="#f06a06" text="结束" font-size="30" extendstyle="8511"/>
			  </node>
			 </node>
		  </node>
		</node>
	
		
    <node rect="0,0,0,93"  extendstyle="1871">
	    <image rect="0,0,0,0" style="minsize" src="file://image/progressbg.png" extendstyle="1077"/>
		<node rect="20,20,120,80"  extendstyle="1111">
		  <button rect="0,0,90,60"   extendstyle="1011">
			<image rect="0,0,0,0"  src="file://image/ondemandbg.png" extendstyle="1077" style="maxsize"/>
		    <label name="ondemandAndReListen" rect="0,0,0,0" color="#FFFFFF" text="直播" v-align="center" h-align="center"  font-size="25"  extendstyle="1177"/>
		  </button>
		</node>
		<button name="progressBtn" rect="0,30,480,50" extendstyle="8111" OnMouseDown="progressOnMouseDown" OnMouseMove="progressOnMouseMove" OnMouseUp="progressOnMouseUp">
			<image name="progressBarImg" rect="5,8,0,16" style="autosize"  extendstyle="0010"  src="file://image/progress_barimg.png" />	
			<image name="progressBgImg" rect="-10,4,0,26" style="autosize" extendstyle="0070"  src="file://image/progress_bg1.png" />
			<image name="progressPointImg" rect="0,0,20,34"  bodyalpha="255" extendstyle="1111" style="sudoku-auto" sudoku="0,0,0,0" src="file://image/progress_point.png"/>
        </button>
        
		<label name="lblCurtime" color="#FF6600" extendstyle="5111" rect="0,0,90,93" v-align="center" h-align="center"  font-size="28" text="00:00"/>		
   </node>
	<node rect="0,0,720,0" extendstyle="1817">    
		<image rect="0,0,0,0" src="file://image/gallerbg.png" style="autosize" extendstyle="1177"/>          
		<gallery name="gallery" rect="0,22,0,0" extendstyle="1077" spacing="10" middle-size="720,200" sort="vertical" normal-size="720,200" focus-size="720,176" OnSelect="galleryOnSelect"/>				
	    <node rect="0,248,143,170" extendstyle="1010">
		<!--<shadow rect="0,0,0,0" color="#8470FF" extendstyle="1077"/>-->
		<button name="collectionBtn" rect="0,0,143,176" extendstyle="1177" OnSelect="collectionBtnOnSelect"/>
		</node>
	</node>
	
	<node name="galleryItem" rect="0,0,720,250" normal="sNormal" focus="sFocus" middle="sMiddle" data="" visible="0" enable="0">
		<node name="sNormal" rect="0,0,720,200" extendstyle="1111">
        <label name="lblNormal" rect="67,5,585,100" extendstyle="1111" h-align="center"   v-align="center"  text="" color="#606060" font-size="35"/>			 
        </node>               
		<node name="sFocus" rect="0,0,720,176" extendstyle="1111">
		<image  rect="0,0,0,176" src="file://image/gallerFocusbg.png" style="autosize" extendstyle="1171"/>
		<image  rect="0,66,577,40" src="file://image/gallery_redline.png" style="autosize" extendstyle="5111"/>
        <label name="lblFocus" rect="67,0,585,176" extendstyle="1111" h-align="center"   v-align="center" text="" color="#FFFFFF" font-size="40"/>	
        <node name="collectionNode" rect="0,0,143,176" extendstyle="1111" OnSelect="collectionNodeSelect">
		    <image  name="collection_n" rect="40,45,63,60" src="file://image/collection_n.png" style="autosize" visible="1" extendstyle="1010"/>
		    <image  name="collection_s" rect="40,45,63,60" src="file://image/collection_s.png" style="autosize" visible="0" extendstyle="1010"/>
		    <label  name="click2collect" rect="13,115,130,60" extendstyle="1111" h-align="center"  v-align="center"  text="点击收藏" color="#FFFFFF" font-size="20"/>
        </node>
		</node>				  
        <node name="sMiddle" rect="0,0,720,200" extendstyle="1111">
        <label name="lblMiddle" rect="67,5,585,200" extendstyle="1111" h-align="center" v-align="center" text="" color="#606060" font-size="35"/>	  
        </node>				  
    </node>
		  
	<node name="progressOption" rect="0,360,380,180" extendstyle="1111" visible="0">
			<image rect="0,0,0,0" extendstyle="1177" style="autosize" src="file://image/progressopbg.png"/>			
			<button name="progressbackBtn" OnSelect="progressbackBtnOnSelect" rect="10,15,180,130" extendstyle="1111">
			<image rect="0,0,70,70" extendstyle="1177"  style="autosize"  src="file://image/progressop_btnbg.png"/>
			<image rect="50,10,50,50" style="autosize" extendstyle="1111" src="file://image/progress_back.png"/>
			<label text="回退30秒" rect="20,60,0,0" extendstyle="1577" color="#FFFFFF"/>
			</button>			
			<button name="progressforwardBtn"  OnSelect="progressforwardBtnOnSelect" rect="200,15,180,130" extendstyle="8111">
			<image rect="0,0,70,70" extendstyle="1177" style="autosize" src="file://image/progressop_btnbg.png"/>
			<image rect="50,10,50,50"  style="autosize" extendstyle="1111" src="file://image/progress_forward.png"/>
			<label text="前进30秒" rect="20,60,0,0" extendstyle="1577" color="#FFFFFF" />
			</button>			
	</node>	 

<node name="closeNode" rect="0,0,0,0" extendstyle="1177" visible="0" enable="0"> 
		<button rect="0,0,0,0" extendstyle="1177" OnSelect="closeNodeOnSelect"/>	
        <node name="moreContentsNode" rect="350,80,348,418"  visible="0"  enable="0" extendstyle="1010">
	    <image rect="0,0,0,0" style="autosize" src="file://image/radiomore_bg.png"  extendstyle="1077">
	    </image>
		<list name="radioMoreList" rect="20,60,0,0"  col="1" line="3" extendstyle="1077">
		<list-item name="item1" rect="0,0,301,114" extendstyle="1010">
		<button name="radioMoreItemBtn" rect="0,0,0,104" normal="n" sel="s" OnSelect="radioMoreItemBtnOnSelect" extendstyle="1070">
		   <image rect="0,0,0,0" name="n" src="file://image/radiomorebt.png" style="autosize" extendstyle="1077"/>
		   <image rect="0,0,0,0" name="s" src="file://image/radiomorebt_s.png" style="autosize" extendstyle="1077"/>
		   <image rect="30,36,33,34" name="s" src="$(src)" style="autosize" extendstyle="1010"/>k
		   <label rect="0,0,0,0" name="s" text="$(text)" v-align="center" h-align="center" color="#ffffff" extendstyle="1077"/>
		</button>
        </list-item>
		<dataset>
		<set src="file://image/radiorelisten.png"  text="回听节目"/>
        <set src="file://image/radioappoint.png" text="预约节目"/>	
        <set src="file://image/radiolist.png"  text="节目单"/>	 
		</dataset>
        </list>
	    </node>
	</node>		
    <node name="tipsNode" rect="0,0,720,210" extendstyle="0017"/>  
    </node>
    </body>
</root>

<![CDATA[
require('com_wondertek_mobileaudio.commonlocal')
require('framework.player')

local mainTitle--当前页面播放的名字
local status -- 播放器状态
local lastStatus -- 播放器上次的状态
local isPlayerCreate = false
local playBtn
local pauseBtn
local refreshAnimation
local playingAnimation
local audioname
local audioStartTime
local audioEndTime
local wifiFlag
local galleryItem
local progressBtn
local progressBgImg
local progressBarFlag = 0
local progressPointImg
local progressBarImg
local movex
local progressOption
local leftx
local moreContentsNode
local closeNode
-----------播放器进度条
local totalTime
local startTime
local startTimeLbl
local endTimeLbl
local startTimeNode
local endTimeNode
local betweenStartTotal
local ondemandAndReListen
local PEliveSeek=false--直播时判断回放
local PEreviewSeek=false--回听时判断回放
local PEliveSeekcurPlaySecond =0--直播回放时播放点跟开始点的秒数
local PEreviewSeekcurPlaySecond=0--回听回放时播放点跟开始点的秒数
--收藏进入时所使用保存的table
local radioplayCollectTable={}

function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
	mainTitle=Sprite:findChild(sprite,'mainTitle')
	playBtn=Sprite:findChild(sprite,'playBtn')
	pauseBtn=Sprite:findChild(sprite,'pauseBtn')
	refreshAnimation=Sprite:findChild(sprite,'refreshAnimation')
	playingAnimation=Sprite:findChild(sprite,'playingAnimation')
	audioname=Sprite:findChild(sprite,'audioname')
	audioStartTime=Sprite:findChild(sprite,'audioStartTime')
	audioEndTime=Sprite:findChild(sprite,'audioEndTime')
    startTimeNode=Sprite:findChild(sprite,'startTimeNode')
    endTimeNode=Sprite:findChild(sprite,'endTimeNode')
	wifiFlag=Sprite:findChild(sprite,'wifiFlag')
	moreContentsNode=Sprite:findChild(sprite,'moreContentsNode')
	closeNode=Sprite:findChild(sprite,'closeNode')
	-------暂时使用gallery------
	galleryItem = Sprite:findChild(sprite, 'galleryItem')
	gallery = Sprite:findChild(sprite, 'gallery')
	---进度条相关
	progressBtn =  Sprite:findChild(sprite, 'progressBtn')
	leftx,_, _,left_h = Sprite:getRect(progressBtn)
	progressBgImg = Sprite:findChild(sprite, 'progressBgImg')
	progressPointImg = Sprite:findChild(sprite, 'progressPointImg')
    progressBarImg = Sprite:findChild(sprite, 'progressBarImg')
	progressOption = Sprite:findChild(sprite, 'progressOption')
	ondemandAndReListen= Sprite:findChild(sprite, 'ondemandAndReListen')
	lblCurtime = Sprite:findChild(sprite, 'lblCurtime')
	--首先读取收藏数据
	local reg = Reg:create(Reg.com_wondertek_mobileaudio.playeryue)
    local regFile = 'MODULE:\\com_wondertek_mobileaudio\\radiocollectionlistlocal.xml'
    Reg:load(reg,regFile)
    g_collectionIdsStr = Reg:getString(reg, 'radiocollectionIds')	
	setGalleryData()
end



--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
    if msg == 141 then
       radioLiveItemData=Http:jsonDecode('radioLiveItemData')  
	  if radioLiveItemData and radioLiveItemData~='' then
            if radioLiveItemData.objType == 'live' and radioLiveItemData.livePlayList.programs and radioLiveItemData.livePlayList.programs ~='' then
			    local ct = Util:getServerTime()
				subListTable={}
				subListTable = radioLiveItemData.livePlayList.programs
                local t = os.date('*t', math.floor(ct / 1000))
				local curServerTime = (t.hour < 10 and '0' .. t.hour or t.hour) .. ':' .. (t.min < 10 and '0' .. t.min or t.min)            
                --请求数据				
                for i=0,#radioLiveItemData.livePlayList.programs do
                    if (radioLiveItemData.livePlayList.programs[i].eTime >= curServerTime) and (radioLiveItemData.livePlayList.programs[i].sTime <= curServerTime)  then
                        local tmpParam = radioLiveItemData.livePlayList.programs[i].param
						Sprite:setProperty(lblCurtime,'text',radioLiveItemData.livePlayList.programs[i].eTime)
                        if string.match(tmpParam,'live') then
                            tmpParam = tmpParam .. 'live=true;'
                        end
						if radioLiveItemData.livePlayList.programs[i].name=='' or radioLiveItemData.livePlayList.programs[i].name==nil then 
						Sprite:setProperty(audioname, 'text',  '暂无数据') 
						else
						Sprite:setProperty(ondemandAndReListen, 'text', '直播') 
						Sprite:setProperty(audioname, 'text',  radioLiveItemData.livePlayList.programs[i].name) 
						local s = Util:split(radioLiveItemData.livePlayList.programs[i].sTime, ':')
                        local e = Util:split(radioLiveItemData.livePlayList.programs[i].eTime, ':')
                        startTime = (s[1] * 60 + s[2]) * 60
                        endTime = (e[1] * 60 + e[2]) * 60
						startTimeLbl = radioLiveItemData.livePlayList.programs[i].sTime
                        endTimeLbl =radioLiveItemData.livePlayList.programs[i].eTime
						Sprite:setProperty(audioStartTime, 'text',startTimeLbl)
						Sprite:setProperty(audioEndTime, 'text',endTimeLbl)
						totalTime=endTime-startTime
						Sprite:setVisible(startTimeNode,1)	
                        Sprite:setVisible(endTimeNode,1)	
						local bottomReg = Reg:create('com_wondertek_mobileaudio_bottomplayer')
                        Reg:setInteger(bottomReg,'type',0)
                        Reg:setString(bottomReg,'audioName',radioLiveItemData.livePlayList.programs[i].name)
						if radioLiveItemData.livePlayList then
						local day = Util:split(radioLiveItemData.livePlayList.curDay, '-')
                        curDay = day[1]..day[2]..day[3]
                        end 
						Util:_goPlay(tmpParam,{isAudio=true})
                        break 
						end
					end
                 end
		   else
		      Sprite:setProperty(audioname, 'text',  '暂无数据')
              Sprite:setVisible(startTimeNode,0)	
              Sprite:setVisible(endTimeNode,0)
			  if getAudioPlayFlag then
              if getAudioPlayFlag() ~= 0 then
			     Player:stop()	
                 resetAudioPlayFlag()
				 setProgressBarPos(progressBtn,0)
				 Sprite:setProperty(lblCurtime, 'text','00:00')
				 uiStop()
				 Timer:cancel(TimerId.radiostatus)
			  end
			  end              			  
		   end	 
     end
	elseif msg==108 then
	radioLiveItemData1=Http:jsonDecode('radioLiveItemData1')
	local reg = Reg:create(Reg.com_wondertek_mobileaudio.audiolive)
    local data=Reg:getString(reg,'audioplayData')
	local _,_,liveId1=string.find(data,'liveId=(%d+);')
	gallarydata={}	
	for i=0,#radioLiveItemData1.radioLiveItemList do
       table.insert(gallarydata,radioLiveItemData1.radioLiveItemList[i])
	  end
	local temptable
	local j=0	
	for i=1,#gallarydata do
	  local _,_, liveId = string.find(gallarydata[i].param,'liveId=(%d+);')
	  if liveId1 == liveId then
		j=i
		temptable=gallarydata[i]
	  end
	end	
	if j~=0 or j~=''then
	table.remove(gallarydata, j)
	table.insert(gallarydata, 1, temptable)
    end	
	
	-- gallarydata=Reg:getTable(reg,'audioFMData')
	Gallery:loadItem(gallery, galleryItem, #gallarydata, 'onLoadGalleryItem')
    Gallery:adjust(gallery) 
	elseif msg == Msg.getJsonPlayer then
        Loading:close()
        local playerData = Http:jsonDecode('playerData')		
        if  playerData and 'table' == type(playerData) then
            --获取本次数据内容
            playerJson = Http:jsonDecode('playerData')
			liveUrl = string.gsub(playerData.playUrl,"&amp;","&")
            gContparam = playerJson ~=nil and playerJson.param or ''
            if playerJson and playerJson~='' and gContparam and gContparam ~='' then
                initPlayer() 			
			end
        else
            Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,7)) --('无法获取数据，请稍后再试')
        end		
    else
        Util:onPluginEvent(msg, param)
    end
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
	setNodeState(closeNode,0)
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\audioplay.wdml') 
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\bokeplay.wdml')
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\audioplaylocal.wdml') 
	PELiveFinishFlag = false  --该变量用于判断华为播放器直播回放节目是否播放结束
    local curConnect = Http:getCurConnect()
    if curConnect == 'WLAN' then
	Sprite:setProperty(wifiFlag, 'src', 'file://image/wififlag.png') 
	else
	Sprite:setProperty(wifiFlag, 'src', '') 
	end
	local reg = Reg:create('Reg.com_wondertek_mobileaudio.playeryue') --保存当前播放节目名称
    local audioReplayData=Reg:getString(reg, 'audioReplayData')
	if audioReplayData and audioReplayData~='' and audioReplayData~=nil then	
	local _,_,objType = string.find(audioReplayData, 'objType=([%a%d]+);')
	local _,_,contentId= string.find(audioReplayData, 'contentId=(%d+);')
	local _,_,nodeId = string.find(audioReplayData, 'nodeId=(%d+);')
	local _,_,sTime = string.find(audioReplayData, 'sTime=([^;]+);')
	local _,_,eTime = string.find(audioReplayData, 'eTime=([^;]+);')
	local _,_,name = string.find(audioReplayData, 'name=([^;]+);')
	local _,_,curDays = string.find(audioReplayData, 'curDay=([^;]+);')
	local day = Util:split(curDays, '-')
    curDay = day[1]..day[2]..day[3]	
	Sprite:setProperty(audioname, 'text',  name) 
	local s = Util:split(sTime, ':')
    local e = Util:split(eTime, ':')
    startTime = (s[1] * 60 + s[2]) * 60
    endTime = (e[1] * 60 + e[2]) * 60
	startTimeLbl = sTime
    endTimeLbl =eTime
	Sprite:setProperty(audioStartTime, 'text',startTimeLbl)
	Sprite:setProperty(audioEndTime, 'text',endTimeLbl)
	totalTime=endTime-startTime
	Sprite:setProperty(lblCurtime,'text',eTime)	
    PEreviewSeekcurPlaySecond=0	
	local audioReplayParam='objType='..objType..';'..'contentId='..contentId..';'..'nodeId='..nodeId..';'
    Util:_goPlay(audioReplayParam)
	Sprite:setProperty(ondemandAndReListen, 'text', '回放') 
	Reg:setString(reg, 'audioReplayData','')
	end
    elseif msg == MSG_DEACTIVATE then
      
    else
        Util:onSpriteEvent(msg, param)
    end
end

--[[  按键事件响应  ]]--
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then
        if commonF2KeyUp and commonF2KeyUp() then return end
        Scene:back()
    else
        -- Util:mainNodeOnKeyUp(sprite, kc)
    end
end

function setData()
    Sprite:setProperty(mainTitle,'text','电台')
end

-- @brief 初始化播放器
function initPlayer()  
    objType = playerJson.objType
	Log:write('initPlayer===========',objType)
    -- symbian手机请求的播放地址不知为何会带&amp;字符串 导致open后play死机 在这里统一替换
    playUrl = string.gsub(playerJson.playUrl,"&amp;","&")
    local regplayer = Reg:create(Reg.com_wondertek_mobileaudio.player)
    Reg:setInteger(regplayer, 'minFlag',0) --客户端状态，0表示在应用里，1表示在后台,2表示重复后台 由于可能在后台切换player界面 所以用reg记录
    if Reg:getInteger(regplayer, 'isScreenLock') == 0 then  -- 是否为锁屏状态
        isScreenLock = false
    else
        isScreenLock = true
    end
    createPlayer()
end



-- @brief 创建播放器区域
function createPlayer()
    Player:create(0, -1, 1, 1)
    isPlayerCreate = true
    --旋屏操作放在openUrl里
    openUrl()
	--SendNotification('正在播放:'..playerJson.titleName,'正在播放的节目',playerJson.titleName,'',1116,1,'','notificationaudio')
    ----设置音频播放标志,在此处加是解决loading数据时快速点返回，当前场景以及切换而本场景不释放仍然能收到音频数据产生播放，单播放标志不对的情况
    if isPlayerCreate then
        setAudioPlayFlag(2)

        --增加音频通知消息
        if SendNotification then
            if objType == '0' or objType=='content' then --音频点播
                if gContparam and gContparam ~= '' then
                    if setAudioGParam then setAudioGParam(gContparam) end --保存当前音频参数，供其他场景保存历史记录使用
                    -- local reg = Reg:create('Reg.com_wondertek_mobileaudio.playeryue') --保存当前播放节目名称
                    -- Reg:setString(reg, 'audioCurPlayingTitle',title)
                end
            end
        end
    else
        resetAudioPlayFlag()
    end
end

-- @brief 打开url
function openUrl()
Log:write('playUrl====================2', playUrl)
    --取断点
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.player)
    local breakPoint = Reg:getInteger(reg, 'breakPoint')
    if breakPoint ~= 0 then
        Reg:remove(reg, 'breakPoint')
    end
    if Http:getCurConnect() == 'WLAN' then
        System:setBufferTime(1)
    else
        System:setBufferTime(3)
    end
    Player:open(playUrl,Http:getCurConnect(), breakPoint)
	pluginInvoke(Player:_getHandle(),'StartPlayer')    
	Player:setFullScreen(0)
    Timer:cancel(TimerId.radiostatus)
    Timer:set(TimerId.radiostatus, 1000, 'getRadioStatus')
	local reg = Reg:create(Reg.com_wondertek_mobileaudio.detail)
    Reg:setString(reg,'audioResource','')
end

-- 播放
function playBtnOnSelect(sprite)
  if not isPlayerCreate and subListTable then
        local contList = subListTable
		local reg = Reg:create('com_wondertek_mobileaudio_novel')
		local index=Reg:getString(reg,'novelItemIndex')
        if contList and '' ~= contList[tonumber(index)] then
            local contparam = contList[tonumber(index)].param
            contparam = string.gsub(contparam,'nodeId=1;','nodeId=10230800;')
            contparam = string.gsub(contparam,'nodeId=;','nodeId=10230800;')
            Util:_goPlay(contparam)
        else
            Tips:show('播放器压力有点大…')
        end
    else
        if status == Player.status.Finished or status == Player.status.Stopped then
            createPlayer()
        elseif status == Player.status.Ready
            or status == Player.status.Idle
            or status == Player.status.Paused then
            uiPause()
            Player:play()
        end
    end
end

--暂停
function pauseBtnOnSelect()
    if status == Player.status.Playing then
        uiPlay()
        Player:pause()
    end
end

--播放UI更新
function uiPlay()
    setSpriteStatus(playBtn,1)
	setSpriteStatus(playingAnimation,0)
    setSpriteStatus(pauseBtn,0)
	setSpriteStatus(refreshAnimation,0)
end

--刷新UI更新
function uiRefresh()
    setSpriteStatus(playBtn,0)
	setSpriteStatus(playingAnimation,0)
    setSpriteStatus(pauseBtn,0)
	setSpriteStatus(refreshAnimation,1)
end

--暂停UI更新
function uiPause()
    setSpriteStatus(playBtn,0)
	setSpriteStatus(playingAnimation,1)
    setSpriteStatus(pauseBtn,1)
	setSpriteStatus(refreshAnimation,0)
end

--停止UI更新
function uiStop()
    setSpriteStatus(playBtn,0)
	setSpriteStatus(playingAnimation,0)
    setSpriteStatus(pauseBtn,1)
	setSpriteStatus(refreshAnimation,0)
end

--@brief mode 0- 循环 1-顺序 2-随机
function getNextPlayParam(mode)
   if subListTable then
        local count = #subListTable
        local curPlayName = Sprite:getProperty(audioname,'text')
        Log:write('curPlayName=',curPlayName)
        local iFound = -1       
        if subListTable and subListTable~='' and curPlayName ~='' then        
            for i=0,count  do
                if subListTable[i].name == curPlayName then
                    if mode == 0 then
                        if (i+1 > count) then iFound = 0
                        else iFound = i+1 end
                        break
                    elseif mode == 1 then
                        if (i+1 > count) then iFound = -1
                        else iFound = i+1 end
                        break
                    elseif mode == 2 then
                        math.randomseed(os.time())
                        math.random()
                        iFound = math.random(0,count)
                        break
                    end                
                end
            end
        end
        Log:write('iFound=,mode=',iFound,mode)
        return iFound
    end     
end

--播放下一首
function doPlaynext(data)
    if data ~= '' then -- 如果数据存在在跳转，否则提示没有下一条节目
        if status ~= Player.status.Buffering and status ~= Player.status.Connecting then -- #0032993
            pausePlayer()
            Util:_goPlay(data)
        end
    else
        Tips:show(Util:getTipsMsg(usrMsgFileName.floatMsg,61)) --('没有下一条节目')
    end
end

-- @brief 播放器暂停处理
function pausePlayer(pauseParam)
    if isPlayerCreate and status ~= Player.status.Connecting then
        Player:pause(pauseParam)
    end
end

-- @brief 刷新播放与暂停按钮状态
function getRadioStatus()
    lastStatus = status
    status, errorCode = Player:getStatus() 
   Log:write('getStatus=====',status,Player.status.Connecting,Player.status.Buffering,Player.status.Idle,Player.status.Playing)	
    if  status == Player.status.Connecting or
        status == Player.status.Buffering or status == Player.status.Idle then
	    uiRefresh()
		if objType == 'live' then 
		refreshDemandProgress()	
		end
	elseif (status == Player.status.Playing and not PELiveFinishFlag ) then
        uiPause()
	    if objType == 'live' then
		   refreshDemandProgress()	
	       local getTime = os.date("%X");
	       curtime=string.sub(getTime,7,-3)
	       curtimess=string.sub(getTime,13,-3)
	       -- Sprite:setProperty(audioCurTime, 'text',curtime)
	       -- Sprite:setProperty(audioCurTimeSs,'text',curtimess)
	    elseif objType == 'review' then 
	       refreshDemandProgress()
	    end
    elseif status == Player.status.Paused or status == Player.status.Ready then
        uiPlay()
    elseif status == Player.status.Stopped or status == Player.status.Finished or PELiveFinishFlag then
        -- if lastStatus ~= Player.status.Stopped and lastStatus ~= Player.status.Finished then
            -- if status == Player.status.Finished then
			if objType == 'live' then
                local pIndex = getNextPlayParam(1)
                if subListTable and subListTable ~= '' and pIndex ~= -1 then                   
					Sprite:setProperty(audioname, 'text',  subListTable[pIndex].name) 
					Sprite:setProperty(lblCurtime, 'text',  subListTable[pIndex].eTime) 					
					local s = Util:split(subListTable[pIndex].sTime, ':')
                    local e = Util:split(subListTable[pIndex].eTime, ':')
                    startTime = (s[1] * 60 + s[2]) * 60
                    endTime = (e[1] * 60 + e[2]) * 60												
					startTimeLbl = subListTable[pIndex].sTime
                    endTimeLbl =subListTable[pIndex].eTime
					totalTime=endTime-startTime
					local bottomReg = Reg:create('com_wondertek_mobileaudio_bottomplayer')
                    Reg:setInteger(bottomReg,'type',0)
				    refreshDemandProgress()	
					PELiveFinishFlag=false
					doPlaynext(subListTable[pIndex].param)
                else
                    resetAudioPlayFlag()           
                    Player:stop()
                    Player:show(0)
                    Timer:cancel(TimerId.radiostatus)
                end
			  end
            else
                Player:stop()
                Player:show(0)
                Timer:cancel(TimerId.radiostatus)
            -- end
        -- end
        --uiPlay()
    end
	 if objType ~= 'live' and objType ~= 'review' then
            --local totalTime = timeFormat(Player:getTotalTime())
            --Sprite:setProperty(lblCurtime,'text',totalTime)
     end
    Timer:set(TimerId.radiostatus, 1000, 'getRadioStatus')
end


--播放
function Util:_goPlay(contparam, param)
    local _,_,contentId = string.find(contparam, 'contentId=(%d+);')
    if contentId == nil then contentId = "null" end
    local _,_,nodeId = string.find(contparam, 'nodeId=(%d+);')
    local _,_,objType = string.find(contparam, 'objType=([%a%d]+);')
    if not objType then
        Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,11)) --('该内容已下线')
        return
    end
    if not nodeId and objType ~= 'community' then
        Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,11)) --('该内容已下线')
        return
    end
    nodeId = nodeId or ''
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.player)
    if param and param.breakPoint then 
	Reg:setInteger(reg, 'breakPoint', param.breakPoint) 
	else Reg:setInteger(reg, 'breakPoint', 0) 
	end
    Reg:setString(reg, 'contparam', contparam)
    if param and param.multiDownload then Reg:setString(reg, 'multiDownload', param.multiDownload) else Reg:setString(reg, 'multiDownload', 'false') end
    if param and param.isAudio and param.isAudio == "true" then Reg:setString(reg, 'isAudio', param.isAudio) else Reg:setString(reg, 'isAudio', 'false') end
    if param and not param.withoutLoading then uiRefresh() end
    initCodeRateRule(Util:getNetworkType())  --初始化码率适配规则
    local codeRate = Config:get('rate') --默认读取码率设置，home页里根据网络状况设置初始值,2G流畅，3G和wlan默认是高清
    if param and param.codeRate then codeRate = param.codeRate end --手动码率切换时从参数读取coderate
    local url = Util:getServer() .. Alias.playerData .. '?contentId=' .. contentId .. '&nodeId=' .. nodeId .. '&objType=' .. objType .. '&rate=' .. codeRate
    url = string.find(contparam, 'live=true') and url .. '&live=true' or url
	uiRefresh()
    Http:request('playerData', url, Msg.getJsonPlayer, {useCache = 0})
end


-- @brief 格式化时间
function timeFormat(sec)
    if sec == nil then return '00:00:00' end
	local  hh = math.floor(sec / 3600) < 10 and '0' .. math.floor(sec / 3600) or math.floor(sec / 3600)
    local mm = math.floor(sec / 60) < 10 and '0' .. math.floor(sec / 60) or math.floor(sec / 60)
    local ss = math.mod(sec, 60) < 10 and '0' .. math.mod(sec, 60) or math.mod(sec, 60)
    local time = hh..':'..mm .. ':' .. ss
    return time
end
-- @brief 格式化时间
function timeFormat2(sec)
    if sec == nil then return '00:00' end
    local mm = math.floor(sec / 60) < 10 and '0' .. math.floor(sec / 60) or math.floor(sec / 60)
    local ss = math.mod(sec, 60) < 10 and '0' .. math.mod(sec, 60) or math.mod(sec, 60)
    local time = mm .. ':' .. ss
    return time
end

--三个。。。点击事件
function moreContentsBtnOnSelect(sprite)
   if Sprite:isVisible(moreContentsNode)==0  then  
        setNodeState(closeNode,1)
        setNodeState(moreContentsNode,1)
	else
	   setNodeState(closeNode,0) 
       setNodeState(moreContentsNode, 0) 	
    end
end

--全屏显示，点击button时，消失
function closeNodeOnSelect(sprite)
	setNodeState(closeNode, 0) 
	setNodeState(moreContentsNode,0)
end


function backBtnOnSelect(sprite)
 Scene:back()
end

--------------------暂时使用---Gallery-------------------------------

function setGalleryData() 
    Gallery:removeAllItems(gallery, 1)   
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.audiolive)
    radioplayCollect=Reg:getString(reg,'radioplayCollect')
	local data=Reg:getString(reg,'audioplayData')
	local _,_,parentId=string.find(data,'parentId=(%d+);')
	-- Log:write('radioplayCollect===============',parentId,radioplayCollect)
	if radioplayCollect=='1' then
	radioplayCollectTable=Reg:getTable(reg,'radioplayCollectTable')
	Reg:setString(reg,'radioplayCollect','0')
	local _,_,liveId1=string.find(data,'liveId=(%d+);')
	local temptable
    local j=0	
	for i=1,#radioplayCollectTable do
    local _,_, liveId = string.find(radioplayCollectTable[i],'liveId=(%d+);')
    if liveId1 == liveId then
	j=i
	temptable=radioplayCollectTable[i]
    end
	end
	if j~=0 or j~=''then
	table.remove(radioplayCollectTable, j)
	table.insert(radioplayCollectTable, 1, temptable)
	Gallery:loadItem(gallery, galleryItem, #radioplayCollectTable, 'onLoadGalleryItem')
    Gallery:adjust(gallery) 
    end	
	else
	Log:write('radioplayCollect===============',newParentId)
	newParentId=parentId
	Http:request('radioLiveItemData1', Util:getServer() .. '/publish/clt/resource/mobileaudio3/radiolive/radioLiveItemData2.jsp?'..'nodeId='..newParentId..'&objType=item',108)
    end
 
end

function onLoadGalleryItem(gallery, item, index)
    local lblNormal = Sprite:findChild(item,'lblNormal')
    local lblFocus = Sprite:findChild(item,'lblFocus')
    local lblMiddle = Sprite:findChild(item,'lblMiddle')
    Sprite:setProperty(item, 'extendstyle', '1111')
    Sprite:setProperty(item, 'normal', 'sNormal')
    Sprite:setProperty(item, 'focus', 'sFocus')
    Sprite:setProperty(item, 'middle', 'sMiddle')
	Gallery:setCurItem(gallery,index+1)
	if radioplayCollect=='1' then
	local _,_,name=string.find(radioplayCollectTable[index+1],'name=([^;]+);')
	Sprite:setProperty(lblNormal, 'text',name)
    Sprite:setProperty(lblFocus, 'text',name)
    Sprite:setProperty(lblMiddle, 'text',name)	   
	else
	Sprite:setProperty(lblNormal, 'text', gallarydata[index+1].name)
    Sprite:setProperty(lblFocus, 'text',  gallarydata[index+1].name)
    Sprite:setProperty(lblMiddle, 'text', gallarydata[index+1].name)
	end
end

function galleryOnSelect(sprite) 
   local index = Gallery:getCurItem(gallery)
   local item=Gallery:getItem(gallery, index)
   local tempodeId
   local collection_n=Sprite:findChild(item,'collection_n')
   local collection_s=Sprite:findChild(item,'collection_s')
   local click2collect=Sprite:findChild(item,'click2collect')
   if radioplayCollect=='1' then
    local _,_,name=string.find(radioplayCollectTable[index+1],'name=([^;]+);')
	local _,_,nodeId=string.find(radioplayCollectTable[index+1],'liveId=(%d+);')
	tempodeId=nodeId
    Sprite:setProperty(mainTitle,'text',name)
   else
   data=gallarydata[index+1].param
   Sprite:setProperty(mainTitle,'text',gallarydata[index+1].name)
   local _,_,nodeId=string.find(data,'liveId=(%d+);')
   tempodeId=nodeId
   end
   
   local reg = Reg:create(Reg.com_wondertek_mobileaudio.home)
   Reg:setString(reg, 'liveNodeId',tempodeId)
   PEliveSeek=false --直播回放设置
   --更新收藏UI
	if hasCollected(tempodeId, g_collectionIdsStr) then
        Sprite:setVisible(collection_s,1)
		Sprite:setVisible(collection_n,0)
		Sprite:setProperty(click2collect, 'text', '点击取消') 
	else
		Sprite:setVisible(collection_s,0)
		Sprite:setVisible(collection_n,1)
		Sprite:setProperty(click2collect, 'text', '点击收藏') 
    end
   Http:request('radioLiveItemData', Util:getServer()..'/publish/clt/resource/mobileaudio3/radiolive/radioLiveItemData2.jsp?nodeId='..tempodeId..'&objType=live',141)
end
--------------------暂时使用---Gallery-------------------------------
-- @brief 刷新点播进度条
function refreshDemandProgress(bForceRefresh)
    local _, _, bg_w = Sprite:getRect(progressBgImg)
    local ct = Util:getServerTime()			
    local t = os.date('*t', math.floor(ct / 1000))
    curTime= (t.hour < 10 and '0' .. t.hour or t.hour)*3600+(t.min < 10 and '0' .. t.min or t.min)*60+(t.sec < 10 and '0' .. t.sec or t.sec)*1
    
	if objType == 'review' then
	Log:write('betweenStartTotal=====',betweenStartTotal)
        betweenStartTotal=PEreviewSeekcurPlaySecond-startTime
		if betweenStartTotal<0 then
		   PEreviewSeekcurPlaySecond = startTime
		   betweenStartTotal=0
		else
		   PEreviewSeekcurPlaySecond=PEreviewSeekcurPlaySecond+1
		end
		if totalTime and totalTime ~= 0 and betweenStartTotal then
        local pct = bg_w / totalTime
	    local x = math.floor(pct * betweenStartTotal)
        if progressBarFlag == 0 then  --进度条被拖动过程中不按时间片调整进度条长度
	        setProgressBarPos(progressBtn, x)
	    end
    end
	elseif objType == 'live' then 
     	if not PEliveSeek then 
	       betweenStartTotal=curTime-startTime
	    else
	       betweenStartTotal=PEliveSeekcurPlaySecond-startTime
	       PEliveSeekcurPlaySecond=PEliveSeekcurPlaySecond+1
	    end 
        if totalTime and totalTime ~= 0 and betweenStartTotal then
        local pct = bg_w / totalTime
	    local x = math.floor(pct * betweenStartTotal)
        if progressBarFlag == 0 then  --进度条被拖动过程中不按时间片调整进度条长度
	        setProgressBarPos(progressBtn, x)
	    end
        end
        if curTime >= endTime then
	    -- PELiveFinishFlag = true
	    end
   end
end

-- @brief 设置进度条
function setProgressBarPos(sprite,x,seek)
   
    local bg_w
    if objType == 'live' then
        _, _, bg_w = Sprite:getRect(progressBgImg)
    else
        _, _, bg_w = Sprite:getRect(progressBgImg)
    end
    if x > bg_w then
        x = bg_w
    end
	if x<0 then
	    x=0
	end
	   Log:write('------setProgressBarPos--1--,x=',playUrl,x,objType,seek)
       local bar_x, bar_y, _, bar_h = Sprite:getRect(progressBarImg)
       local p_x,p_y,p_w,p_h = Sprite:getRect(progressPointImg)	
       Sprite:setRect(progressBarImg,bar_x,bar_y,x,bar_h)
	   Sprite:setRect(progressPointImg,x-p_w/2,p_y,p_w, p_h)   
    -- if objType ~= 'live' and objType ~= 'review' then
        -- local totalTime = Player:getTotalTime()
        -- local pct = x / bg_w
        -- local curTime = math.floor(totalTime * pct)
		-- Log:write('ccurentTime1',curTime,totalTime,pct)
    -- end
	pct = x / bg_w
	if objType ~= 'live' and objType ~= 'review' then
        local totalTime = Player:getTotalTime()
        local curTime = math.floor(totalTime * pct)
    end	
    if seek then
		if objType == 'live' then
		    PEliveSeek=true--直播时判断回放
		    local ct = Util:getServerTime()
            local t = os.date('*t', math.floor(ct / 1000))
            local curPlayTime = (t.hour < 10 and '0' .. t.hour or t.hour) .. ':' .. (t.min < 10 and '0' .. t.min or t.min)
            local curPlaySecond = 0						
            local playTime,endTime,curPlaySecond,timeOffset = liveSeekTimeFormat(ct,t,startTimeLbl,endTimeLbl,pct)
			Log:write('curPlaySecond=========',playTime,endTime,curPlayTime,curPlaySecond,timeOffset)
			PEliveSeekcurPlaySecond=curPlaySecond
            lastBufTime = ct
            if (t.hour * 60 + t.min) * 60 - curPlaySecond  <= 180 then
				Sprite:setProperty(ondemandAndReListen, 'text', '直播') 
				PEliveSeek=false
                playUrl = liveUrl
            else
			        Sprite:setProperty(ondemandAndReListen, 'text', '回放') 
                    local j = string.find(playUrl,"playbackbegin")
                    if j then
                        playUrl = string.gsub(playUrl,"&playbackbegin=%d+&playbackend=%d+","&playbackbegin="..playTime.."&playbackend="..endTime)
                    else
                        playUrl = playUrl.."&playbackbegin="..playTime.."&playbackend="..endTime
                    end
            end
            Timer:cancel(TimerId.radiostatus)
            createPlayer()	
		elseif objType == 'review' then
		    local ct = Util:getServerTime()
            local t = os.date('*t', math.floor(ct / 1000))
            local curPlayTime = (t.hour < 10 and '0' .. t.hour or t.hour) .. ':' .. (t.min < 10 and '0' .. t.min or t.min)
			Log:write('liveSeekTimeFormat=========curPlayTime',curPlayTime)
            local curPlaySecond = 0						
            local playTime,endTime,curPlaySecond,timeOffset = liveSeekTimeFormat(ct,t,startTimeLbl,endTimeLbl,pct)
			PEreviewSeekcurPlaySecond=curPlaySecond
            lastBufTime = ct 
			Log:write('liveSeekTimeFormat=========review',playTime,endTime,curPlaySecond,timeOffset)
            local j = string.find(playUrl,"playbackbegin")
                if j then
                    playUrl = string.gsub(playUrl,"&playbackbegin=%d+&playbackend=%d+","&playbackbegin="..playTime.."&playbackend="..endTime)
                else
                    playUrl = playUrl.."&playbackbegin="..playTime.."&playbackend="..endTime
                end
            Log:write('playUrl====================review', playUrl)
            Timer:cancel(TimerId.radiostatus)
            createPlayer()	
	end		
    end
end



function liveSeekTimeFormat(ct,t,startT,endT,pct)
    Log:write('liveSeekTimeFormat=========2',ct,t,startT,endT,pct,curDay)
    local s = Util:split(startT, ':')
    local e = Util:split(endT, ':')
    local startTime = (s[1] * 60 + s[2]) * 60
    local endTime = (e[1] * 60 + e[2]) * 60
    local curSecond = math.floor(pct * (endTime - startTime))
    if objType == 'review' then  --华为播放器直播回放seek后以与起始时间相差多少秒的方式记录当前seek时间点
        PEReviewCurTime = curSecond
    end
    local curPlaySecond = startTime + curSecond
    local hour = math.floor((startTime + curSecond) / 60 / 60)
    local min = math.floor((startTime + curSecond - hour * 60 * 60) / 60)
    local sec = startTime + curSecond - hour * 60 * 60 - min * 60
    hour = hour < 10 and 0 .. hour or hour
    min = min < 10 and 0 .. min or min
    sec = sec < 10 and 0 .. sec or sec	
    local year = t.year < 10 and 0 .. t.year or t.year
    local month = t.month < 10 and 0 .. t.month or t.month
    local day = t.day < 10 and 0 .. t.day or t.day	
    local timeOffset = (t.hour * 60 * 60 + t.min * 60 + t.sec - curSecond - startTime) * 1000
    -- return curDay..hour..min..sec,year..month..day..e[1]..e[2].."00",curPlaySecond,timeOffset
	return curDay..hour..min..sec,curDay..e[1]..e[2].."00",curPlaySecond,timeOffset
end




function setBufferingBarPos(sprite, x)
    Log:write('setBufferingBarPos ---')
    local _, _, bg_w = Sprite:getRect(progressBgImg)
    if x > bg_w then
        x = bg_w
    elseif x < 0 then
        x = 0
    end
    -- local bar_x, bar_y, bar_w, bar_h = Sprite:getRect(bufferingBarImg)
    -- if x>bar_w then
        -- Sprite:setRect(bufferingBarImg, bar_x, bar_y, x, bar_h)
    -- end
end

-- @brief 进度条OnMouseDown事件
function progressOnMouseDown(sprite, x, y)
    -- Log:write('progressOnMouseDown============',x,y)
    if status == Player.status.Playing or status == Player.status.Ready or status == Player.status.Paused or status == Player.status.Buffering then
        setProgressBarPos(sprite, x)
        progressBarFlag = 1   
    end	
	 return 0
end

-- @brief 进度条OnMouseUp事件
function progressOnMouseUp(sprite, x, y)
    -- Sprite:releaseCapture(progressBtn)
    if status == Player.status.Playing or status == Player.status.Ready or status == Player.status.Paused or status == Player.status.Buffering then
        Timer:cancel(TimerId.radiostatus)
        Timer:set(TimerId.radiostatus, 500, 'getRadioStatus')
        setProgressBarPos(sprite, x,1)
        progressBarFlag = 0	
	    local bar_x, bar_y, bay_w, bar_h = Sprite:getRect(progressOption)
	    Sprite:setVisible(progressOption,1)
	    Sprite:setRect(progressOption,x-bay_w/2, bar_y,bay_w, bar_h)
	    Sprite:setEnable(progressOption,1)
	    Timer:set(1099, 3000, 'closeProgressOption')
    return 0
    end
end

function closeProgressOption()
	Sprite:setVisible(progressOption,0)
	Sprite:setEnable(progressOption,0)
end

-- @brief 进度条OnMouseMove事件
function progressOnMouseMove(sprite, x, y)
	Log:write('状态move',x)
	movex = x
	moveflag = x
	progressBarFlag = 1
	if movex <= leftx then
		x = leftx
		progressBarFlag = 0
		-- movex = 0
	end
    if status == Player.status.Playing or status == Player.status.Ready or status == Player.status.Paused or status == Player.status.Buffering then
        if progressBarFlag == 1 then -- 在OnMouseDown时设置此标识量，表明需要响应OnMouseMove事件，否则不响应
		    Timer:cancel(TimerId.radiostatus)
            setProgressBarPos(sprite,x)
			Timer:set(TimerId.radiostatus, 500, 'getRadioStatus')
		else
            return 0
        end
    end
end

function collectionBtnOnSelect(sprite)
 Log:write('newParentId======',newParentId)
 CollectionType=1
 local progParam,templiveId
 local index = Gallery:getCurItem(gallery)
 local item=Gallery:getItem(gallery, index)
 local collection_n=Sprite:findChild(item,'collection_n')
 local collection_s=Sprite:findChild(item,'collection_s')
 local click2collect=Sprite:findChild(item,'click2collect')
 if radioplayCollect=='1' then
 --收藏的时候点击收藏按钮
 
 local _,_,nodeId=string.find(radioplayCollectTable[index+1],'liveId=(%d+);')
 local data=radioplayCollectTable[index+1]
 Log:write('radioplayCollectTable=====',data)
 local _,_,name=string.find(data,'name=([^;]+);')
 local _,_,liveId=string.find(data,'liveId=(%d+);')
 local objType='live'
 local _,_,newParentId=string.find(data,'parentId=(%d+);')
 progParam = name..'|'..liveId..'|'.. objType..'|'..newParentId
 templiveId=liveId
 else
 local data=gallarydata[index+1].param
 local name=gallarydata[index+1].name
 local _,_,liveId=string.find(data,'liveId=(%d+);')
 local objType='live'
 local name=gallarydata[index+1].name
 progParam = name..'|'..liveId..'|'.. objType..'|'..newParentId
 templiveId=liveId
 end
 if Sprite:isVisible(collection_n)==1 then
    Sprite:setVisible(collection_n, 0) 
    Sprite:setVisible(collection_s, 1) 
    addOneCollectionProg(templiveId,progParam,CollectionType)
	Sprite:setProperty(click2collect, 'text', '点击取消') 
	Tips:show('收藏成功')
 else
    deleteOneCollectionProg(templiveId,CollectionType)
    Sprite:setVisible(collection_n, 1) 
    Sprite:setVisible(collection_s, 0) 
	Sprite:setProperty(click2collect, 'text', '点击收藏') 
 end
 
end

function progressbackBtnOnSelect(sprite)
	local ct = Player:getCurTime()
	Log:write('progressbackBtnOnSelect======',ct)
	Timer:cancel(1099)
	Log:write('bala1',ct)
	if ct <= 30 then
		Player:seek(0)
		Timer:set(1099, 3000, 'closeProgressOption')
	else
		Player:seek(ct-30)
		Timer:set(1099, 3000, 'closeProgressOption')
	end
	
end

function progressforwardBtnOnSelect(sprite)
	local ct = Player:getCurTime()
	local tt = Player:getTotalTime() 
	Timer:cancel(1099)
	Log:write('bala2',ct,tt)
	if ct+30 >= tt then
		Player:seek(tt)
		Timer:set(1099, 3000, 'closeProgressOption')
	else
		Player:seek(ct+30)
		Timer:set(1099, 3000, 'closeProgressOption')
	end
end

--回听、预约、节目单按钮点击事件
function radioMoreItemBtnOnSelect(sprite)
    local item = Sprite:getParent(sprite)
    local index = List:getItemIndex(item)
	if index ==0 then
	 Scene:go('MODULE:\\com_wondertek_mobileaudio\\radiorelisten.wdml',{freeDestScene=true})
	elseif index==1 then
	 Scene:go('MODULE:\\com_wondertek_mobileaudio\\radioappoint.wdml',{freeDestScene=true})
	elseif index==2 then
	 Scene:go('MODULE:\\com_wondertek_mobileaudio\\radiolist2.wdml',{freeDestScene=true})
	end	
	if Sprite:isVisible(moreContentsNode)==0  then
    setNodeState(moreContentsNode,1)
	else
	setNodeState(moreContentsNode,0)
  end
end

------------------------------------------------------------
 -- @function addOneCollectionProg()
 ------------------------------------------------------------
 -- @brief 添加一个收藏节目
 ------------------------------------------------------------
 -- @access public
 ------------------------------------------------------------
 -- @param contentId -- 内容ID作为保存的键值关键字
 -- @param CollectionParam -- 预约的保存参数
                        -- 老版本:节目起始时间
                        -- 新版本:节目起始时间|时间段|内容名|栏目名|contentId|nodeId
 -- @param CollectionType         -- 预约文件类型, 0 - 平台预约 ,1-本地预约
 ------------------------------------------------------------
 -- @return
 ------------------------------------------------------------
 --]]
function addOneCollectionProg(liveId,CollectionParam,CollectionType)
    local _,_,CollectionParamStartTime= string.find(CollectionParam,'(.-)|')
    Log:write('addOneCollectionProg', liveId, CollectionParam,CollectionType)
    local tempIdsStr = ''
    local reg = 0
    local regFile = ''
    if CollectionType == 0 or CollectionType == nil then
        reg = Reg:create(Reg.com_wondertek_mobileaudio.playeryue)
        regFile = 'MODULE:\\com_wondertek_mobileaudio\\radiocollectionlist.xml'
    else
        reg = Reg:create(Reg.com_wondertek_mobileaudio.playeryue)
        regFile =  'MODULE:\\com_wondertek_mobileaudio\\radiocollectionlistlocal.xml'
    end
    Reg:load(reg,regFile)
    local collectionIdsStr = Reg:getString(reg, 'radiocollectionIds')
    if collectionIdsStr and '' ~= collectionIdsStr then
        --按照时间排序插入
        local collectionIdsTable = Util:split(collectionIdsStr, '|')
        local count = #collectionIdsTable - 1
        Log:write('addOnecollectionProg',collectionIdsStr,collectionIdsTable,count)
        for i=count,1,-1 do
            local collectionValueStr = Reg:getString(reg, collectionIdsTable[i])
            Log:write('addOneCollectionProg collectionValueStr',collectionValueStr)
            local _,_,valueStartTime= string.find(collectionValueStr,'(.-)|')
            Log:write('addOneCollectionProg() valueStartTime',valueStartTime,CollectionParamStartTime)
            if CollectionParamStartTime >= valueStartTime then  --比较日期，大的插入最后面
                 for j=1,i do
                    if tempIdsStr == '' then
                        tempIdsStr = collectionIdsTable[j] .. '|'
                    else
                        tempIdsStr = tempIdsStr .. collectionIdsTable[j] .. '|'
                    end
                 end
                 tempIdsStr = tempIdsStr .. liveId.. '|'
                 for k=i+1,count do
                    tempIdsStr = tempIdsStr ..collectionIdsTable[k].. '|'
                 end
                 break
            end
        end
        if tempIdsStr == '' then --表明没找到合适的位子，说明该时间最小,插入到最前面
            tempIdsStr = liveId ..'|'.. collectionIdsStr
        end
        Reg:setString(reg, 'radiocollectionIds', tempIdsStr)
    else
        Reg:setString(reg, 'radiocollectionIds', liveId .. '|')
    end
    Reg:setString(reg, liveId, CollectionParam)
    Reg:save(reg, regFile)
    Reg:release(Reg.com_wondertek_mobileaudio.playeryue)
end


 ------------------------------------------------------------
 -- @function deleteOneCollectionProg()
 ------------------------------------------------------------
 -- @brief 删除一个收藏节目
 ------------------------------------------------------------
 -- @access public
 ------------------------------------------------------------
 -- @param liveId            -- 内容ID作为保存的键值关键字
 -- @param collectionType          -- 预约文件类型, 0 - 平台预约 ,1-本地预约
 ------------------------------------------------------------
 -- @return
 ------------------------------------------------------------
function deleteOneCollectionProg(liveId,collectionType)
    Log:write('deleteOneCollectionProg', liveId, collectionType)
    local reg = 0
    local regFile = ''
    if collectionType == 0 or collectionType == nil then
        reg = Reg:create(Reg.com_wondertek_mobileaudio.playeryue)
        regFile = 'MODULE:\\com_wondertek_mobileaudio\\radiocollectionlist.xml'
    else
        reg = Reg:create(Reg.com_wondertek_mobileaudio.playeryue)
        regFile =  'MODULE:\\com_wondertek_mobileaudio\\radiocollectionlistlocal.xml'
    end
    Reg:load(reg,regFile)

    local collectionIdsStr = Reg:getString(reg, 'radiocollectionIds')
    if hasCollected(liveId,collectionIdsStr) then
        collectionIdsStr = string.gsub(collectionIdsStr,liveId..'|' ,'')
        Reg:setString(reg,'radiocollectionIds',collectionIdsStr)
        Reg:remove(reg,liveId)
        Reg:save(reg, regFile)
    end
    Reg:release(Reg.com_wondertek_mobileaudio.playeryue)
	Tips:show('取消成功')
end

-- @brief 判断节目是否在收藏列表中
function hasCollected(liveId, collectionIdsStr)
    if collectionIdsStr and '' ~= collectionIdsStr then
        local collectionIdsTable = Util:split(collectionIdsStr, '|')
        local count = #collectionIdsTable - 1
        for i=1,count do
            if tonumber(collectionIdsTable[i]) == tonumber(liveId) then
                return true
            end
        end
    end
    return false
end

]]>
