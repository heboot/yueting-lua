<?xml version="1.0" encoding="UTF-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2013, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
 == | Desc: 帮助
 == ============================================================================
-->
<root>
    <header/>
    <body BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent" resolution="720,1280">
    <node name="mainNode" rect="0,0,720,1280" extendstyle="1111" layouttype="1" OnKeyUp="mainNodeOnKeyUp">
        <image rect="0,0,720,1280" src="file://image/background.png"   style="autosize"   alpha="255" extendstyle="1111" />
        <node name="mianTopNode" rect="0,0,720,90"  extendstyle="1111">
		     <image rect="0,0,0,0" style="autosize" src="file://image/top_bg.png" extendstyle="1077"/>
		    <button name="backBtn" normal="n" sel="s" rect="10,15,104,61" extendstyle="1111" OnSelect="backBtnOnSelect" visible="1" enable="1">
			<image name="n" rect="0,0,0,0" style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
			<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		    <label rect="0,0,104,61" extendstyle="1111" text="返回" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
			</button>
            <label name="mainTitle" rect="0,0,720,77" extendstyle="1110" text="录音" color="#FFFFFF" v-align="center" h-align="center" font-size="35"/>	    
		</node> 		
		<node rect="0,320,720,150"  extendstyle="1010" font-family="TianyiDigital">
		<label  name="audioCurTime"  rect="100,0,366,150" color="#FFFFFF" text="00:00" font-size="145" v-align="center" h-align="center" extendstyle="1010"/>
		<label  name="audioCurTimeSS"  rect="0,0,254,85" color="#FFFFFF" text=":00" font-size="80" v-align="center" h-align="left" extendstyle="8510"/>
	    </node>
		<node  rect="0,0,720,600"  extendstyle="1511">
		<label name="recordingLabel" rect="0,80,720,50" text="录音"  font-size="35" h-align="center" color="#FFFFFF" extendstyle="1010"/>
		<button name="tryListenBtn" nornal="n" sel="s" rect="0,30,130,95" extendstyle="1010"  OnSelect="tryListenBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,130,95" style="autosize" src="file://image/recording2_n.png" extendstyle="1010"/>
		<image name="s" rect="0,0,130,95" style="autosize" src="file://image/recording2_s.png" extendstyle="1010"/>
		<label rect="0,0,130,95" text="试听"  v-align="center" h-align="center" font-size="28" color="#000000" extendstyle="1010"/>
		</button>	
		<button name="reRecordingBtn" nornal="n" sel="s" rect="0,340,130,95" extendstyle="1010"  OnSelect="reRecordingBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,130,95" style="autosize" src="file://image/recording2_n.png" extendstyle="1010"/>
		<image name="s" rect="0,0,130,95" style="autosize" src="file://image/recording2_s.png" extendstyle="1010"/>
		<label rect="0,0,130,95" text="重录"  v-align="center" h-align="center" font-size="28" color="#000000" extendstyle="1010"/>
		</button>
		<button name="recordingBtn" nornal="n" sel="s" rect="156,0,407,413" extendstyle="1510"  OnSelect="recordingBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,407,413" style="maxsize" src="file://image/recording_n.png" extendstyle="1010"/>
		<image name="s" rect="0,0,407,413" style="maxsize" src="file://image/recording_s.png" extendstyle="1010"/>
		</button>
		<button name="uploadBtn" nornal="n" sel="s" rect="0,340,130,95" extendstyle="5010"  OnSelect="uploadBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,130,95" style="autosize" src="file://image/uploadrecording_n.png" extendstyle="1010"/>
		<image name="s" rect="0,0,130,95" style="autosize" src="file://image/uploadrecording_s.png" extendstyle="1010"/>
		<label rect="0,0,130,95" text="上传"  v-align="center" h-align="center" font-size="28" color="#000000" extendstyle="1010"/>
		</button>
		</node>

		<node name="tipsNode" rect="0,0,720,210" extendstyle="0017"/>
    </node>
    </body>
</root>
<![CDATA[
require('com_wondertek_mobileaudio.commonlocal')
require('framework.player')
--底部所需变量start
local bottomAudioName
local playBtn
local pauseBtn
local refreshAnimation
local titleName
local blankTip
local audioCurTime
local audioCurTimeSS
local tryListenBtn
local reRecordingBtn
local uploadBtn
local recordingLabel
local isrecording=0
--底部所需变量end

function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
	titleName=Sprite:findChild(sprite,'titleName')
	blankTip = Sprite:findChild(sprite,"blankTip")
    audioCurTime=Sprite:findChild(sprite,'audioCurTime')
	audioCurTimeSS=Sprite:findChild(sprite,'audioCurTimeSS')
    tryListenBtn=Sprite:findChild(sprite,'tryListenBtn')
    reRecordingBtn=Sprite:findChild(sprite,'reRecordingBtn')
    uploadBtn=Sprite:findChild(sprite,'uploadBtn')
	recordingLabel=Sprite:findChild(sprite,'recordingLabel')
end

--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
    if msg == 101 then

    else
        Util:onPluginEvent(msg, param)
    end
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
        commonActivate()
	    setNodeState(audioCurTime, 0) 
		setNodeState(audioCurTimeSS, 0) 		
	    setNodeState(tryListenBtn,0) 
	    setNodeState(reRecordingBtn, 0) 
	    setNodeState(uploadBtn, 0)	
        setNodeState(recordingLabel, 1)			
    elseif msg == MSG_DEACTIVATE then
        commonDeactivate()
        Scene:freeByHandle(rootSprite)
    else
        Util:onSpriteEvent(msg, param)
    end
end

--[[  按键事件响应  ]]--
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then
        if commonF2KeyUp and commonF2KeyUp() then return end
        Scene:back()
    else
        Util:mainNodeOnKeyUp(sprite, kc)
    end
end

function backBtnOnSelect(sprite)
    Scene:back()
end

--底部按钮模块start
function LoadBottomPlayerData()
	local bottomReg = Reg:create('com_wondertek_mobileaudio_bottomplayer')
	local type = Reg:getInteger(bottomReg,'type')
	if type == 1 then
		local audioName = Reg:getString(bottomReg,'audioName')
		if audioName ~= nil then
			Sprite:setProperty(bottomAudioName,'text',audioName)
		end	
	elseif type == 0 then
		local audioName = Reg:getString(bottomReg,'audioName')
		if audioName ~= nil then
			Sprite:setProperty(bottomAudioName,'text',audioName)
		end	
	end
end

function playgoBtnOnSelect(sprite)
	local reg = Reg:create('com_wondertek_mobileaudio_novel')
	local bottomReg = Reg:create('com_wondertek_mobileaudio_bottomplayer')
	local type = Reg:getInteger(bottomReg,'type')
	if type == 1 then
		local data = Reg:getString(bottomReg,'tempParentId')
		Reg:setInteger(reg,'fromFlag',1)
		Reg:setString(reg,'novelItemId',data)
		Scene:go('MODULE:\\com_wondertek_mobileaudio\\audioplay.wdml',{freeDestScene=false})
	elseif type == 0 then
		Scene:go('MODULE:\\com_wondertek_mobileaudio\\playyue.wdml')
	end
end

-- @brief 刷新播放与暂停按钮状态
function getStatus()
    lastStatus = status
    status, errorCode = Player:getStatus()
    Log:write("status, errorCode",status, errorCode)
    if status == Player.status.Idle or
        status == Player.status.Connecting or
        status == Player.status.Buffering or
        status == Player.status.Playing then
        -- uiPause()
		 local t = Player:getCurTime()
	     local s = Util:split(t, ':')
         Sprite:setProperty(audioCurTime,"text",'00:'..s[1])
		 Sprite:setProperty(audioCurTimeSS,"text",':'..s[2])		
    elseif status == Player.status.Paused or status == Player.status.Ready then
        -- uiPlay()
    elseif status == Player.status.Paused then
        -- uiPlay()
    elseif status == Player.status.Stopped or status == Player.status.Finished then
        -- uiPlay()
        Player:stop()
        Player:show(0)
        isPlayerCreate = nil
        return
    end
    Timer:set(TimerId.status, 500, 'getStatus')
end

--播放UI更新
function uiPlay()
    setSpriteStatus(playBtn,1)
	--setSpriteStatus(playingAnimation,0)
    setSpriteStatus(pauseBtn,0)
	setSpriteStatus(refreshAnimation,0)
end

--刷新UI更新
function uiRefresh()
    setSpriteStatus(playBtn,0)
	--setSpriteStatus(playingAnimation,0)
    setSpriteStatus(pauseBtn,0)
	setSpriteStatus(refreshAnimation,1)
end

--暂停UI更新
function uiPause()
    setSpriteStatus(playBtn,0)
	--setSpriteStatus(playingAnimation,1)
    setSpriteStatus(pauseBtn,1)
	setSpriteStatus(refreshAnimation,0)
end

-- 播放
function playBtnOnSelect(sprite)
	uiPause()
	Player:play()
end

--暂停
function pauseBtnOnSelect()
    if status == Player.status.Playing then
        uiPlay()
        Player:pause()
    end
end
--底部按钮模块end

function editOnTextChanged(sprite)
    local p = Sprite:getParent(sprite)
    local blankTip = Sprite:findChild(p,"blankTip")
    if Sprite:getText(sprite) == "" then
        setNodeState(blankTip,1)
    else
        setNodeState(blankTip,0)
    end
end

--录音点击按钮
function recordingBtnOnSelect(sprite)
    if getAudioPlayFlag then
       if getAudioPlayFlag() ~= 0 then
          Player:stop()
	   end
	   setNodeState(audioCurTime, 1) 
	   setNodeState(audioCurTimeSS, 1) 	
	   setNodeState(tryListenBtn,1) 
	   setNodeState(reRecordingBtn, 1) 
	   setNodeState(uploadBtn, 1)
       if isrecording==0 then 
          setNodeState(recordingLabel, 0)		
      	  local flashCard = System:getFlashCardName(1)
          local innerCard = System:getFlashCardName(0)
      	  local desPath = ""
      	  if flashCard and flashCard ~= "" then
      	    desPath = flashCard .. "audiodownload/"
      	  elseif innerCard and innerCard ~= "" then
      	    desPath = innerCard .. "audiodownload/"
      	  else
            Tips:show("sd卡没插吧？")
          return
        end
    if not IO:dirExist(desPath) then
        IO:dirCreate(desPath)
    end
    local ct = Util:getServerTime()
    local t = os.date('*t', math.floor(ct / 1000))
    for i,v in pairs(t) do
        local numv = tonumber(v)
        if numv and numv < 10 then
            t[i] = 0 .. v
        end
    end
    desFilePath = desPath .. t["year"] .. t["month"] .. t["day"] .. t["hour"] .. t["min"] .. t["sec"] .. ".mp3"
    dofunction(8, desFilePath, "", 1, 0)
    timeTickingStart = GetTickTime()
    Timer:set(TimerId.once,500,"OnTimeTicking")
	isrecording=1
	elseif isrecording==1 then 
	if not desFilePath then return end
    dofunction(8, "", "", 0, 0)
    setNodeState(recordingLabel, 1)		
    Sprite:setProperty(recordingLabel,"text","结束")
    Timer:cancel(TimerId.once)
	isrecording=0
	end
  end
end

function OnTimeTicking()
    local tick = math.floor((GetTickTime() - timeTickingStart)/1000)
    local t = Util:timeFormat(tick)
	local s = Util:split(t, ':')
    Sprite:setProperty(audioCurTime,"text",'00:'..s[1])
	Sprite:setProperty(audioCurTimeSS,"text",':'..s[2])	
    Timer:cancel(TimerId.once)
    Timer:set(TimerId.once,500,"OnTimeTicking")
end

--重录按钮
function reRecordingBtnOnSelect(sprite)
    deleteRecordingFile()
    Sprite:setProperty(audioCurTime,"text","00:00")
	Sprite:setProperty(audioCurTimeSS,"text",":00")	
	isrecording=0
    recordingBtnOnSelect()
end


--点击上传按钮
function uploadBtnOnSelect(sprite)
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.upload)
    Reg:setString(reg,"filepath",desFilePath)
    Scene:go('MODULE:\\com_wondertek_mobileaudio\\uploadworks.wdml',{setReturn=false})
end

--点击试听按钮
function tryListenBtnOnSelect(sprite)
    if getAudioPlayFlag() ~= 0 then
        local curAudioScene = getAudioScene()
        Log:write('Msg.getJsonPlayer CurScene =',curAudioScene )
        Sprite:sendEvent(curAudioScene, Msg.stopAudioTimer)
        Player:stop()
		pluginInvoke(Player:_getHandle(),'StartPlayer')   
        resetAudioPlayFlag() 
		Timer:cancel(TimerId.status)
        Timer:set(TimerId.status, 500, 'getStatus')
    end
    if not isPlayerCreate then
        Player:create(0, -1, 1, 1)
        isPlayerCreate = true
        openUrl()
    else
        Player:play()
        -- uiPause()
    end
end

function openUrl()
    -- desFilePath='/mnt/sdcard/audiodownload/20140303141219.mp3'
    Player:open(desFilePath)
	pluginInvoke(Player:_getHandle(),'StartPlayer')
    Timer:cancel(TimerId.status)
    Timer:set(TimerId.status, 500, 'getStatus')
end



function deleteRecordingFile()
    if desFilePath and IO:fileExist(desFilePath) then
        IO:fileRemove(desFilePath)
    end
end
]]>
