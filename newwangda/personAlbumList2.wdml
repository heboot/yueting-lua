<?xml version="1.0" encoding="utf-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2011, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
 == | Desc: 首页
 == ============================================================================
-->
<root>
    <header/>       
    <body resolution="720,1280" BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
    <node name="mainNode" rect="0,0,720,1280" enable="true" active="true"  OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">  
	<!--main -->
	<node name="mainNode" rect="0,0,720,1168" padding="0,0,112,0" extendstyle="1116">
		<image rect="0,0,720,0" style="autosize" src="file://image/background.png" extendstyle="1017"/>
		<node name="mianTopNode" rect="0,0,720,90"  extendstyle="1111">
		<image rect="0,0,0,0" style="autosize" src="file://image/top_bg.png" extendstyle="1077"/>
		<button name="backBtn" normal="n" sel="s" rect="10,15,104,61" extendstyle="1111" OnSelect="backBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,0,0" style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
		<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		<label rect="0,0,104,61" extendstyle="1111" text="返回" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
		</button>
        <label name="mainTitle" rect="0,0,720,77" extendstyle="1110" text="" color="#FFFFFF" v-align="center" h-align="center" font-size="35"/>
	    <button name="editBtn" normal="n" sel="s" rect="600,15,104,61" extendstyle="1111" OnSelect="editBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,0,0" style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
		<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		<label name="editBtnLabel" rect="0,0,104,61" extendstyle="1111" text="编辑" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
		</button>
	   </node>
		<node name="contentNode" rect="0,90,720,0" padding="0,0,20,0"   extendstyle="1116" >
		   <panorama name="mainPanorama" rect="0,0,720,0" extendstyle="1017" style="circle" foreground="panoramaItem1">
		   <panoramaitem name="panoramaItem1" rect="0,0,720,0" extendstyle="1017">
		   <image rect="270,200,173,135" style="maxsize" alpha="155" extendstyle="1014" src="file://image/nothingbg.png"/>
		   <label rect="0,380,720,50" text="空空如也" v-align="center" alpha="75" h-align="center" postfix=".."  extendstyle="1010" color="#CCCCCC"  font-size="35"/>
		   <label rect="0,460,720,50" text="您可以添加作品到本专辑" v-align="center" alpha="255" h-align="center" postfix=".."  extendstyle="1010" color="#000000"  font-size="30"/>
           </panoramaitem>
		   <panoramaitem name="panoramaItem2" rect="0,0,720,0" extendstyle="1017" visible="1">
		   <listview name="podcastListview" rect="0,0,720,0"  extendstyle="1117" limit="false">
		   </listview>
           </panoramaitem>
		   </panorama>	    
	    </node>
	</node>
	
	<!--左侧菜单推荐的电台数据item-->
	<node name="podcastItem" rect="0,0,720,172" extendstyle="1010"  visible="0" enable="0" active="0">
		    <button name="podcastItemBtn" normal="n" sel="s" OnSelect="podcastItemBtnOnSelect" rect="0,0,720,0" extendstyle="1117">								
			<shadow name="s" rect="0,0,720,0" alpha="50" color="#000000" extendstyle="1117"/> 
			</button>
			<image rect="20,19,237,133" src="file://image/noveldefaultbg.png" style="autosize" extendstyle="1010"  BuildChildrenFinished="resChoose"><node/></image>	
			<image name="podcastImage"  rect="20,19,237,133" style="autosize" extendstyle="1010"/>
			<label name="podcastName" rect="270,0,400,172" v-align="center" h-align="center" postfix=".."  extendstyle="1111" color="#FFFFFF"  font-size="35"/>	
			<button name="deleteBtn" rect="610,64,89,52" style="maxsize" visible="0" enable="0" OnSelect="deleteBtnOnSelect" extendstyle="1011">
	        <image rect="0,0,89,52" style="maxsize" src="file://image/deletebtn.png"  extendstyle="1011"/>
	        <label rect="0,0,89,52" extendstyle="1111"  h-align="center" v-align="center"  text="移除"  color="#FFFFFF"  font-size="25"/>
	        </button>
			<image name="arrowGo" rect="670,78,31,34" style="maxsize"  extendstyle="1111" src="file://image/play_go.png"/>	
            <image rect="0,0,720,2" style="autosize" extendstyle="1514" src="file://image/leftlistview_line.png"/>			
	</node>	
	<node name="tipsNode" rect="0,0,720,210" extendstyle="0017"/>
		
    </node>	
</body>
</root>
<![CDATA[
require('com_wondertek_mobileaudio.commonlocal')

local rootSprite
local podcastListview
local podcastItem
local mainTitle
local parentId
local panoramaItem1
local IfDelete=false --判断是否移除除


-- @brief root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
	 rootSprite = sprite
	 podcastListview = Sprite:findChild(sprite, 'podcastListview')
	 podcastItem = Sprite:findChild(rootSprite, 'podcastItem')
	 mainTitle = Sprite:findChild(rootSprite, 'mainTitle')
	 panoramaItem1= Sprite:findChild(rootSprite, 'panoramaItem1')
	 local reg = Reg:create('Reg.com_wondertek_mobileaudio_podcast.personalBoke')
	 local data=Reg:getString(reg,'albumIndex')
	 local _,_,Index=string.find(data, 'albumIndex=(%d+);')
	 albumIndex=Index
	 Log:write('albumIndex=========',data)
	 if albumIndex=='1'then 
	    Sprite:setProperty(mainTitle,'text','我的娱乐')
	 elseif albumIndex=='2'then 
	    Sprite:setProperty(mainTitle,'text','我的音乐')
	 elseif albumIndex=='3'then 
	    Sprite:setProperty(mainTitle,'text','我的情感')
	 elseif albumIndex=='4'then 
	    Sprite:setProperty(mainTitle,'text','我的脱口秀')
	 end
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
	   Bottom:show()
       requestPodcastUserData()
	  Loading:show()
    elseif msg == MSG_DEACTIVATE then
         commonDeactivate()
         Scene:freeByHandle(rootSprite)
    elseif msg == Msg.login then
      
    else
        Util:onSpriteEvent(msg, param)
    end
end

--[[  请求小说列表数据方法  ]]--
function requestPodcastUserData()
	local regCommunity = Reg:create(Reg.com_wondertek_mobileaudio.community)
    local userId = Reg:getString(regCommunity ,'userId')
    _userId = userId
    Http:request('podcastUserData', Util:getWeiBoServer() .. '/publish/clt/resource/mobileaudio3/podcast/podcastUserData.jsp?'..'userId='..userId,103,{useCache=0})
end

--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
	if msg == 103 then
	     Loading:close()
		 podcastUserData = Http:jsonDecode('podcastUserData')
		 loadpodcastListviewData()
	elseif msg==105 then
	     Loading:close()
		 deleteCode = Http:jsonDecode('deleteCode')
		 if deleteCode.result=='0000' then
	         Tips:show('移除成功')
			 requestPodcastUserData()
			 -- Loading:show()
	    else
	         Tips:show('移除失败')
	    end
	elseif msg == Msg.getJsonPlayer then
        Loading:close()
        playerJson = Http:jsonDecode('playerData')
        if playerJson and playerJson.code == '1014' then
            Net:goToMyAccount()
        elseif playerJson and playerJson.orderList then
            OrderNode:show(playerJson)
        elseif playerJson and playerJson.errordesc then
            Tips:show(playerJson.errordesc)
        elseif playerJson and 'table' == type(playerJson) then
            --获取本次数据内容
            gContparam = playerJson ~=nil and playerJson.param or ''
            _,_,contentId = string.find(gContparam , 'contentId=(%d+);')
            if playerJson and playerJson~='' and gContparam and gContparam ~='' then
                if string.match(gContparam,'objType=live') or string.match(gContparam,'objType=review') then
                    -- donothing
                elseif string.match(gContparam,'objType=community') or string.match(gContparam,'objType=content') then
                    --判断是否音频正在播放，如在播放则停止
                    if getAudioPlayFlag then
                        if getAudioPlayFlag() ~= 0 then
                            Log:write('------------Msg.getJsonPlayer-2--------')
                            --停止定时器，防止视频停止后音频点播自动播放下一集，取悦听场景句柄
                            if getAudioScene then
                                local curAudioScene = getAudioScene()
                                Log:write('Msg.getJsonPlayer CurScene =',curAudioScene )
                                Sprite:sendEvent(curAudioScene, Msg.stopAudioTimer)
                                resetAudioScene()
								
                            end
                            --Player:stop()
                            --Player:show(0)
                            --isPlayerCreate = false
                            --resetAudioPlayFlag()
                        end
                    end
                    initPlayer()
                end
            -- end
			end
        -- else
            -- Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,7)) --('无法获取数据，请稍后再试')
        end	    
	else
         Util:onPluginEvent(msg, param)	
	end
end

--[[  加载小说列表数据方法 ]]--
function loadpodcastListviewData()
    if albumIndex=='1' then 
	  if podcastUserData.list1~=''  and podcastUserData.list1~=nil then	  
	     setNodeState(panoramaItem1,0)
	     ListView:removeAllItems(podcastListview, 1, 1)
         ListView:loadItem(podcastListview,podcastItem,#podcastUserData.list1+1,'loadpodcastItem')
	     ListView:adjust(podcastListview)
	  end	  
	elseif albumIndex=='2' then
	  if podcastUserData.list2~=''  and podcastUserData.list2~=nil then
	     setNodeState(panoramaItem1,0)
	     ListView:removeAllItems(podcastListview, 1, 1)
         ListView:loadItem(podcastListview,podcastItem,#podcastUserData.list2+1,'loadpodcastItem')
	     ListView:adjust(podcastListview)
	  end	
	elseif albumIndex=='3' then
	  if podcastUserData.list3~=''  and podcastUserData.list3~=nil then
	     setNodeState(panoramaItem1,0)
	     ListView:removeAllItems(podcastListview, 1, 1)
         ListView:loadItem(podcastListview,podcastItem,#podcastUserData.list3+1,'loadpodcastItem')
	     ListView:adjust(podcastListview)
	  end	
	elseif albumIndex=='4' then
	  if podcastUserData.list4~=''  and podcastUserData.list4~=nil then
	     setNodeState(panoramaItem1,0)
	     ListView:removeAllItems(podcastListview, 1, 1)
         ListView:loadItem(podcastListview,podcastItem,#podcastUserData.list4+1,'loadpodcastItem')
	     ListView:adjust(podcastListview)
	  end	
   end	
end

--[[  加载小说列表ITEM数据方法 ]]--
function loadpodcastItem(list,item,index)
    Sprite:setRect(item, 0,0,720,172)
    Sprite:setProperty(item,'extendstyle','1010')
	local podcastImage=Sprite:findChild(item,'podcastImage')
	local podcastName=Sprite:findChild(item,'podcastName')
	local arrowGo =Sprite:findChild(item, 'arrowGo')
	local deleteBtn =Sprite:findChild(item, 'deleteBtn')
	local podcastItemBtn=Sprite:findChild(item,'podcastItemBtn')
	if albumIndex=='1' then
	   Sprite:setProperty(podcastImage,'src',podcastUserData.list1[index].videoImg)
	   Sprite:setProperty(podcastName,'text',podcastUserData.list1[index].title)
	   Sprite:setProperty(deleteBtn,'data',podcastUserData.list1[index].blogId)
	   Sprite:setProperty(podcastItemBtn,'data',podcastUserData.list1[index].param)
	elseif albumIndex=='2' then
	   Sprite:setProperty(podcastImage,'src',podcastUserData.list2[index].videoImg)
	   Sprite:setProperty(podcastName,'text',podcastUserData.list2[index].title)
	   Sprite:setProperty(deleteBtn,'data',podcastUserData.list2[index].blogId)
	   Sprite:setProperty(podcastItemBtn,'data',podcastUserData.list1[index].param)
	elseif albumIndex=='3' then
	   Sprite:setProperty(podcastImage,'src',podcastUserData.list3[index].videoImg)
	   Sprite:setProperty(podcastName,'text',podcastUserData.list3[index].title)
	   Sprite:setProperty(deleteBtn,'data',podcastUserData.list3[index].blogId)
	   Sprite:setProperty(podcastItemBtn,'data',podcastUserData.list1[index].param)
	elseif albumIndex=='4' then
	   Sprite:setProperty(podcastImage,'src',podcastUserData.list4[index].videoImg)
	   Sprite:setProperty(podcastName,'text',podcastUserData.list4[index].title)
	   Sprite:setProperty(deleteBtn,'data',podcastUserData.list4[index].blogId)
	   Sprite:setProperty(podcastItemBtn,'data',podcastUserData.list1[index].param)
	end
	if not IfDelete then
       Sprite:setVisible(arrowGo, 1)
       Sprite:setVisible(deleteBtn, 0)
	   Sprite:setEnable(deleteBtn, 0)  
       Sprite:setEnable(podcastItemBtn, 1)  	  	   
	else 
	   Sprite:setVisible(arrowGo, 0)
       Sprite:setVisible(deleteBtn, 1)
	   Sprite:setEnable(deleteBtn, 1)  
       Sprite:setEnable(podcastItemBtn, 0)  		   
	end
end

--返回按钮方法
function backBtnOnSelect(sprite)
	Scene:back()
end

-- @brief 主节点OnKeyUp事件
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then
        if commonF2KeyUp and commonF2KeyUp() then return end
        Scene:back()
    end
end

function podcastItemBtnOnSelect(sprite)
	-- local data = Sprite:getData(sprite)
	-- local reg = Reg:create('Reg.com_wondertek_mobileaudio_podcast.personalBoke')
	-- Reg:setString(reg,'albumIndex',data)
	-- Scene:go('MODULE:\\com_wondertek_mobileaudio\\podcastList.wdml',{freeDestScene=true})
	local item= Sprite:getParent(sprite)
    local index=ListView:getItemIndex(item) 
    local data = Sprite:getData(sprite)
	local bokeCollectTable={}
	local reg = Reg:create('Reg.com_wondertek_mobileaudio_podcast.personalBoke')
	local stable = {}
	if albumIndex=='1' then
		for i = 1,#podcastUserData.list1 do
			if tonumber(podcastUserData.list1[i].blogStatus) == 1 then
				table.insert(stable,podcastUserData.list1[i])
			end
		end
	end
	if albumIndex=='2' then
		for i = 1,#podcastUserData.list2 do
			if tonumber(podcastUserData.list1[i].blogStatus) == 1 then
				table.insert(stable,podcastUserData.list1[i])
			end
		end
	end
	if albumIndex=='3' then
		for i = 1,#podcastUserData.list3 do
			if tonumber(podcastUserData.list1[i].blogStatus) == 1 then
				table.insert(stable,podcastUserData.list1[i])
			end
		end
	end
	if albumIndex=='4' then
		for i = 1,#podcastUserData.list4 do
			if tonumber(podcastUserData.list1[i].blogStatus) == 1 then
				table.insert(stable,podcastUserData.list1[i])
			end
		end
	end
	Reg:setTable(reg,'bokeCollectTable',stable)  
	Reg:setString(reg,'bokeItemId',data)
	Reg:setString(reg,'bokeItemIndex',index)
    Util:_goPlay(data)
end

--播放
function Util:_goPlay(contparam, param)
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\playyue.wdml') 
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\audioplay.wdml')
	Scene:freeByName('MODULE:\\com_wondertek_mobileaudio\\audioplaylocal.wdml') 
	Loading:show()
    Log:write('_goPlay=====',contparam, param)
    local _,_,contentId = string.find(contparam, 'contentId=(%d+);')
    if contentId == nil then contentId = "null" end
    local _,_,nodeId = string.find(contparam, 'nodeId=(%d+);')
    local _,_,objType = string.find(contparam, 'objType=([%a%d]+);')
    if not objType then
        Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,11)) --('该内容已下线')
		Loading:close()
        return
    end
    if not nodeId and objType ~= 'community' then
        Tips:show(Util:getTipsMsg(usrMsgFileName.localTipsMsg,11)) --('该内容已下线')
		Loading:close()
        return
    end
    nodeId = nodeId or ''
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.player)
    if param and param.breakPoint then 
	Reg:setInteger(reg, 'breakPoint', param.breakPoint) 
	else Reg:setInteger(reg, 'breakPoint', 0) 
	end
    Reg:setString(reg, 'contparam', contparam)
    if param and param.multiDownload then Reg:setString(reg, 'multiDownload', param.multiDownload) else Reg:setString(reg, 'multiDownload', 'false') end
    if param and param.isAudio and param.isAudio == "true" then Reg:setString(reg, 'isAudio', param.isAudio) else Reg:setString(reg, 'isAudio', 'false') end
    if param and not param.withoutLoading then uiRefresh()end
    initCodeRateRule(Util:getNetworkType())  --初始化码率适配规则
    local codeRate = Config:get('rate') --默认读取码率设置，home页里根据网络状况设置初始值,2G流畅，3G和wlan默认是高清
    if param and param.codeRate then codeRate = param.codeRate end --手动码率切换时从参数读取coderate
    local url = Util:getServer() .. Alias.playerData .. '?contentId=' .. contentId .. '&nodeId=' .. nodeId .. '&objType=community' .. '&rate=' .. codeRate
    url = string.find(contparam, 'live=true') and url .. '&live=true' or url
	uiRefresh()
    Http:request('playerData', url, Msg.getJsonPlayer, {useCache = 0})
end

-- @brief 初始化播放器
function initPlayer()
    
    -- symbian手机请求的播放地址不知为何会带&amp;字符串 导致open后play死机 在这里统一替换
    playUrl = string.gsub(playerJson.playUrl,"&amp;","&")

    local regplayer = Reg:create(Reg.com_wondertek_mobileaudio.player)
    Reg:setInteger(regplayer, 'minFlag',0) --客户端状态，0表示在应用里，1表示在后台,2表示重复后台 由于可能在后台切换player界面 所以用reg记录
    if Reg:getInteger(regplayer, 'isScreenLock') == 0 then  -- 是否为锁屏状态
        isScreenLock = false
    else
        isScreenLock = true
    end
    createPlayer()
end



-- @brief 创建播放器区域
function createPlayer()
	Log:write('创建')
    Player:create(0, -1, 1, 1)
    isPlayerCreate = true
    --旋屏操作放在openUrl里
    openUrl()

    ----设置音频播放标志,在此处加是解决loading数据时快速点返回，当前场景以及切换而本场景不释放仍然能收到音频数据产生播放，单播放标志不对的情况
    if isPlayerCreate then
        setAudioPlayFlag(2)

        --增加音频通知消息
        if SendNotification then
            if objType == '0' or objType=='content' then --音频点播
                if gContparam and gContparam ~= '' then
                    if setAudioGParam then setAudioGParam(gContparam) end --保存当前音频参数，供其他场景保存历史记录使用
                    local reg = Reg:create('Reg.com_wondertek_mobileaudio.playeryue') --保存当前播放节目名称
                    -- Reg:setString(reg, 'audioCurPlayingTitle',title)
                end
            end
        end
    else
        resetAudioPlayFlag()
    end
end

-- @brief 打开url
function openUrl()
    --取断点
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.player)
    local breakPoint = Reg:getInteger(reg, 'breakPoint')
    if breakPoint ~= 0 then
        Reg:remove(reg, 'breakPoint')
    end
    if Http:getCurConnect() == 'WLAN' then
        System:setBufferTime(1)
    else
        System:setBufferTime(3)
    end
    Player:open(playUrl,Http:getCurConnect(), breakPoint)
	pluginInvoke(Player:_getHandle(),'StartPlayer')    
	Log:write('testbottominsert',playerJson.titleName)
	local bottomReg = Reg:create('com_wondertek_mobileaudio_bottomplayer')
	Reg:setString(bottomReg,'audioName',playerJson.titleName)
	Reg:setString(bottomReg,'type',2)
	Reg:setString(bottomReg,'playUrl',playUrl)	
	Player:setFullScreen(0)
    Timer:cancel(TimerId.status)
    Timer:set(TimerId.status, 1000, 'getStatus')
	local reg = Reg:create(Reg.com_wondertek_mobileaudio.detail)
    Reg:setString(reg,'audioResource','')
end

-- @brief 刷新播放与暂停按钮状态
function getStatus()
    lastStatus = status
    status, errorCode = Player:getStatus()  
	Log:write('bushi',objType,status,errorCode)
    if  status == Player.status.Connecting or
        status == Player.status.Buffering or status == Player.status.Idle then
	    uiRefresh()
		if objType ~= 'live' then 
		--refreshDemandProgress()	
		end
	elseif (status == Player.status.Playing and not PEReviewFinishFlag ) then
        uiPause()
		if objType ~= 'live' then 
		--refreshDemandProgress()	
		end
	local CurTime = timeFormat(Player:getCurTime())
	--Sprite:setProperty(audioCurTime,'text',CurTime)
        -- if objType ~= 'live' then refreshDemandProgress() end
    elseif status == Player.status.Paused or status == Player.status.Ready then
        uiPlay()
        -- if objType == 'live' then refreshLiveProgress() end
    elseif status == Player.status.Stopped or status == Player.status.Finished or PEReviewFinishFlag then
        if lastStatus ~= Player.status.Stopped and lastStatus ~= Player.status.Finished then
            -- if status == Player.status.Finished then
                -- local pIndex = getNextPlayParam(1)
                -- if subListTable and subListTable ~= '' and pIndex ~= -1 then
                    -- Log:write('subListTable[pIndex].param=',subListTable[pIndex].param)
                    -- doPlaynext(subListTable[pIndex].param)
                -- else
                    -- resetAudioPlayFlag()           
                    -- Player:stop()
                    -- Player:show(0)
                    -- Timer:cancel(TimerId.status)
                -- end
            -- else
                -- Player:stop()
                -- Player:show(0)
                -- Timer:cancel(TimerId.status)
            -- end
        end
        -- uiPlay()
    end
	 if objType ~= 'live' and objType ~= 'review' then
            --local totalTime = timeFormat(Player:getTotalTime())
            --Sprite:setProperty(lblCurtime,'text',totalTime)
     end
    Timer:set(TimerId.status, 500, 'getStatus')
end

-- @brief 格式化时间
function timeFormat(sec)
    if sec == nil then return '00:00:00' end
	local  hh = math.floor(sec / 3600) < 10 and '0' .. math.floor(sec / 3600) or math.floor(sec / 3600)
    local mm = math.floor(sec / 60) < 10 and '0' .. math.floor(sec / 60) or math.floor(sec / 60)
    local ss = math.mod(sec, 60) < 10 and '0' .. math.mod(sec, 60) or math.mod(sec, 60)
    local time = hh..':'..mm .. ':' .. ss
    return time
end

function editBtnOnSelect(sprite)
    local editBtnLabel=Sprite:findChild(rootSprite,'editBtnLabel')
	if Sprite:getText(editBtnLabel) =='编辑' then
       Sprite:setProperty(editBtnLabel,'text','完成')
	   IfDelete=true
	elseif  Sprite:getText(editBtnLabel) =='完成' then
	   Sprite:setProperty(editBtnLabel,'text','编辑')
	   IfDelete=false
	end
	loadpodcastListviewData()
end

function deleteBtnOnSelect(sprite)
	local data=Sprite:getData(sprite)
	deletedata=data
    Dialog:show('', '要将该作品从专辑总转移到作品中吗？', 'ok_cancel', 'Delete_cancel')
end


--[[
 ------------------------------------------------------------
 -- @function Dialog:show(title, message, typeStr, okCallback, cancelCallback, okText, cancelText, checkBoxCallback, checkBoxText, isChecked)
 ------------------------------------------------------------
 -- @brief 显示对话框
 ------------------------------------------------------------
 -- @param string title 对话框标题
 -- @param string message 对话框内容
 -- @param string typeStr 对话框类型，'ok'、'cancle'、'ok_cancel'
 -- @param string okCallback 确定回调函数名，可空
 ------------------------------------------------------------
 -- @return void
 ------------------------------------------------------------
 --]]
function Dialog:show(title, message, typeStr, okCallback)
    local curScene = Sprite:getCurScene()
    Sprite:sendEvent(curScene, Msg.dialogShow)
    local mainNode = Sprite:findChild(curScene, 'mainNode')
    local dialogNode = Sprite:findChild(curScene, 'dialogNode')
    if dialogNode ~= 0 then
        setNodeState(dialogNode, 1)
    else
        dialogNode = Sprite:create('node', Sprite:findChild(curScene, 'mainNode'))
        Sprite:setProperty(dialogNode, 'name', 'dialogNode')
		Sprite:loadFromString(dialogNode, Dialog.layout)
    end
	local dtext = Sprite:findChild(dialogNode, 'dtext')
	local okBtn = Sprite:findChild(dialogNode, 'okBtn')
	local cancelBtn = Sprite:findChild(dialogNode, 'cancelBtn')
    Sprite:setProperty(dtext, 'text', message)
end

--Dialog确定按钮
function _okProc()
	  Http:request('deleteCode', Util:getWeiBoServer() .. '/sup/modifyAlbum.msp?blogId='..deletedata..'&album=0',105)
	  Dialog:close()
	  Loading:show()
end

--Dialog取消按钮
function _cancelProc()
     Dialog:close()
end

Dialog.layout = [[
<?xml version="1.0" encoding="utf-8"?>
<root>
    <header/>
    <body>
        <button rect="0,0,720,1280" OnSelect="" extendstyle="1111"/>
        <shadow rect="0,0,720,1280" color="#000000" alpha="70" extendstyle="1111"/>
        <node name="dframe" rect="54,475,612,230" extendstyle="1010">
            <image rect="0,0,612,230" src="file://image/dialogbg.png"  style="sudoku-auto" sudoku="5,5,5,5" extendstyle="1017" />
            <textarea name="dtext" text="" rect="0,0,612,100" extendstyle="1010" font-size="28" color="#7F7B7A" line-height="25" h-align="center" v-align="center" loop="true" step="1"/>
            <node name="btnArea" rect="34,120,544,77" extendstyle="0010">
                <button name="okBtn" rect="0,0,255,77" style="autosize" OnSelect="_okProc" extendstyle="1510" normal="n" sel="s">
                    <node name="n" rect="0,0,255,77" extendstyle="1010" >
					    <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1010" />
                        <label name="textOkN" rect="0,0,255,77" extendstyle="1010" text="确定" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                    <node name="s" rect="0,0,255,77" extendstyle="1010" frame="true">
                        <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1010" />
                        <label name="textOkF" rect="0,0,255,77" extendstyle="1010" text="确定" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                </button>
                <button name="cancelBtn" rect="289,50,255,77" OnSelect="_cancelProc" extendstyle="1570" normal="n" sel="s" disabled="d">
                    <node name="n" rect="0,0,255,77" extendstyle="1010" >
					    <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1070"/>
                        <label name="textCancelN" rect="0,0,255,77" extendstyle="1010" text="取消" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                    <node name="s" rect="0,0,255,77" extendstyle="1070" frame="true">
                        <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1070"/>
                        <label name="textCancelF" rect="0,0,255,77" extendstyle="1010" text="取消" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                </button>
            </node>
        </node>
    </body>
</root>
]]

]]>