<?xml version="1.0" encoding="utf-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2011, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
 == | Author: wangweipeng <wangweipeng@mantis.com>
 == ============================================================================
 == | Desc: 首页
 == ============================================================================
-->
<root>
    <header/>       
    <body resolution="720,1280" BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
    <node name="mainNode" rect="0,0,720,1280" enable="true" active="true"  OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">  
	<!--main -->
	<node name="mainNode" rect="0,0,720,1168" padding="0,0,112,0" extendstyle="1116">
		<image rect="0,0,720,0" style="autosize" src="file://image/background.png" extendstyle="1017"/>
		<node name="mianTopNode" rect="0,0,720,90"  extendstyle="1111">
		<image rect="0,0,0,0" style="autosize" src="file://image/top_bg.png" extendstyle="1077"/>
		<button name="backBtn" normal="n" sel="s" rect="10,15,104,61" extendstyle="1111" OnSelect="backBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,0,0" style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
		<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		<label rect="0,0,104,61" extendstyle="1111" text="返回" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
		</button>
        <label name="mainTitle" rect="0,0,720,77" extendstyle="1110" text="下载收藏" color="#FFFFFF" v-align="center" h-align="center" font-size="35"/>
	    </node>
		
		<button name="managerBtn" normal="n" sel="s" rect="600,15,104,61" extendstyle="1111" OnSelect="managerBtnOnSelect" visible="1" enable="1">
		<image name="n" rect="0,0,0,0" style="autosize" src="file://image/navigation_bg.png" extendstyle="1077"/>
		<image name="s" rect="0,0,0,0" style="autosize" src="file://image/navigation_s_bg.png" extendstyle="1077"/>
		<label name="managername" rect="0,0,104,61" extendstyle="1111" text="管理" color="#FFFFFF" v-align="center" h-align="center" font-size="25"/>
		</button>
		
		<image src="file://image/novel_listbg.png" style="autosize" rect="20,100,686,0" padding="0,0,20,0"   extendstyle="1016" />
		<node name="contentNode" rect="20,120,686,0" padding="0,0,20,0"   extendstyle="1116" >
	    <listview name="downloadListview" rect="0,0,686,0"  extendstyle="1117" limit="false">
		</listview>
	    </node>
	</node>
	
	
	<node name="downloadItem" rect="0,50,686,160" extendstyle="1070"  visible="0" enable="0" active="0">
		    <button name="downloadItemBtn" normal="n" sel="s" rect="0,0,686,0" extendstyle="1117">					
			<image name="n" rect="0,0,686,0" style="autosize" extendstyle="1117" src="file://image/novel_listitem_bg.png"/>
			<shadow name="s" rect="0,0,686,0" alpha="50" color="#000000" extendstyle="1117"/> 
			<image name="downloadItemImage"  rect="20,15,210,141" style="autosize" extendstyle="1111"/>
			<label name="novelName" rect="250,10,400,55" v-align="center" postfix=".."  extendstyle="1111" color="#FFFFFF"  font-size="35"/>
			<!--<label rect="250,100,70,50" v-align="center" text="作者:" h-align="center"  extendstyle="1111" color="#999999"  font-size="28"/>-->		
			<label name="novelAuthor" rect="0,100,80,50" v-align="center" h-align="center" postfix=".."  extendstyle="8111" color="#999999"  font-size="28"/>
			<label rect="250,70,70,40" v-align="center" h-align="center" text="主播:" extendstyle="1111" color="#999999"  font-size="28"/>			
			<label name="novelAnchor" rect="0,70,200,40" v-align="center" h-align="center"  postfix=".."  extendstyle="8111" color="#999999"  font-size="28"/>
			<image name="rimg" rect="600,70,50,50" style="autosize"  extendstyle="1111" src="file://image/arrow.png"/>
            <label rect="250,120,180,40" name="downloadStatus" v-align="center" h-align="left"  extendstyle="1111" color="#e15e00"   font-size="28"/>				
				<button name="downloadoptionBtn" OnSelect="downloadoptionBtnOnSelect" rect="450,110,100,60" extendstyle="1111">
					<image name="novelImage"  rect="0,0,100,50" src="file://image/navigation_bg.png" style="maxsize" extendstyle="1010"/>
				    <label rect="0,0,100,50" extendstyle="1010" h-align="center" v-align="center" font-size="25" name="downloadoptionLbl"/>					
				</button>
				<button name="deleteBtn" rect="560,110,89,52" visible="0" enable="0" style="maxsize" OnSelect="deleteBtnOnSelect" extendstyle="1011">
					<image rect="0,0,89,52" style="maxsize" src="file://image/deletebtn.png"  extendstyle="1011"/>
					<label rect="0,0,89,52" extendstyle="1111"  h-align="center" v-align="center"  text="删除"  color="#FFFFFF"  font-size="25"/>
				</button>
			</button>
			<image rect="0,0,686,4" style="autosize"  src="file://image/leftlistview_line.png" extendstyle="1510" />
	</node>
	
	 <node name="nullItem" rect="0,50,686,180" extendstyle="1070" visible="0" enable="0">
        </node>
	
	<node name="tipsNode" rect="0,0,720,210" extendstyle="0017"/>
		
    </node>	
</body>
</root>
<![CDATA[
require('com_wondertek_mobileaudio.commonlocal')


local downloadListview
local downloadItem
local rootSprite
local nullItem

local IfDelete=false --判断是否删除

local delPath
local delId
local delFlag


downloadMember = {
    m_hRootSprite               = 0,
    m_nLastBoxBtnIndex          = 0,
    m_hLeftBtn                  = 0,        --缓存中按钮
    m_hRightBtn                 = 0,        --缓存完按钮
    m_hThirdBtn                 = 0,        --本地视频按钮
    m_hMainPanorama             = 0,
    m_hNavBar                   = 0,        --滑块

    --local
    m_nLocalCreateCurSet        = 0,        --本地创建到第几个set了

    --downloading
    m_tblDownloading            = {},       --正在下载表
    m_nCurDownloadingItemIndex  = 0,        --当前选择第几项
    m_nCurPage                  = 0,        --当前是哪个页面 0：下载页面 1：本地页面
    m_b2G3GDownload             = true,       --cmwap是否允许下载
}


-- @brief root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
	
	
	downloadListview = Sprite:findChild(sprite,'downloadListview')
	downloadItem = Sprite:findChild(sprite,'downloadItem')
	--Http:request('testData',Util:getWeiBoServer()..'publish/clt/resource/mobileaudio3/podcast/podcastListData.jsp?nodeId=10361869', 111)
	nullItem =  Sprite:findChild(sprite,'nullItem')
	
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
	if msg == MSG_ACTIVATE then
	  Log:write('=============bodyOnSpriteEvent')
	  Bottom:show()
	  regNodeInfo = Reg:create("localNodeInfo")
      Reg:load(regNodeInfo, "WONDER:\\temp\\nodeInfo.xml")
	  createDownloadingList()
	  createLocalList()
	  Timer:cancel(30)
	  Timer:set(30,1000,"getDownloadStatus")
    elseif msg == MSG_DEACTIVATE then
       
    elseif msg == Msg.login then
      
    else
        Util:onSpriteEvent(msg, param)
    end
end

--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
	if msg == 101 then
        local nodeImgData = Http:jsonDecode('nodeImgData')
        Log:write("nodeImgData",nodeImgData)
        local count = ListView:getItemCount(downloadListview)		
        for i=0,count do
            local item = ListView:getItem(downloadListview,i)
            local data = Sprite:getData(item)
            if data ~= "" and nodeImgData[data] then
				Log:write('bodyOnPluginEvent====101',nodeImgData.anchor)
				Sprite:setProperty(Sprite:findChild(item,'novelAnchor'),'text',nodeImgData.anchor)
				saveNodeInfo(nodeImgData.name,{img=GetLocalFilename(nodeImgData[data]),count=1,nodeId=nodeImgData.nodeId,anchor=nodeImgData.anchor})
				Sprite:setProperty(Sprite:findChild(item,'downloadItemImage'),'src',nodeImgData[data])
            end
        end
	elseif msg == 111 then
	
		 local testDataa = Http:jsonDecode('testData')
		Log:write('wocaowocao',testDataa.contentList[0].limg)
	else
        Util:onPluginEvent(msg, param)
    end
end

function saveNodeInfo(nodeName,propTable)
    local reg = Reg:create("tmp")
    Reg:load(reg, "WONDER:\\temp\\nodeInfo.xml")
    Reg:setTable(reg,Util:md5(nodeName),propTable)
    Reg:save(reg, "WONDER:\\temp\\nodeInfo.xml")
    Reg:release("tmp")
end

--返回按钮方法
function backBtnOnSelect(sprite)
	Scene:back()
end

-- @brief 主节点OnKeyUp事件
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then
        if commonF2KeyUp and commonF2KeyUp() then return end
		Timer:cancel(30)
		Timer:cancel(30)
        Scene:back()
    end
end

function createDownloadingList()
    --1.获取下载队列表
    timeTab = {}
    sizeTab = {}
    Timer:cancel(30)
    local nCount = Download:getCount()
	Log:write('downloadcount',nCount)
    if nCount > 0 then
        downloadMember.m_tblDownloading = loadDownloadingList()
		
		
        for i = 0, nCount - 1 do
            if downloadMember.m_tblDownloading[i] then
                sizeTab[i] = downloadMember.m_tblDownloading[i].size
                timeTab[i] = 1
            end
        end
        --LoadDownLoadListViewData()
        Timer:set(30,1000,"getDownloadStatus")
     
    else
		downloadMember.m_tblDownloading = nil
		Timer:cancel(30)
		Timer:set(30,1000,"getDownloadStatus")
		ListView:removeAllItems(downloadListview, 1, 1)
		ListView:loadItem(downloadListview, nullItem, 1, 'loadNullItem')
        --ListView:removeAllItems(subListview1, 1, 1)
        --Sprite:setProperty(subListview1TipsLbl,"text","暂无正在缓存的内容")
        --setNodeState(subListview1Tips,1)
    end
    --setSpaceTip()
    --setCmwapDownload()
end

--读取下载队列
function loadDownloadingList()
	Log:write('loadDownloadingList======1',Download:getCount())
    local returnTable = {}
    for i=1,Download:getCount() do
	    Log:write('loadDownloadingList',Download:getStatus(i).status)
	    if Download:getStatus(i).status == 5 then
			Download:delete(i, true,false) 
		else
		 Log:write('loadDownloadingList2',Download:getStatus(i).status)
        returnTable[i-1] = Download:getStatus(i)
		end
    end
	Log:write('dtest22c',#returnTable)
    return returnTable
end

function loadDownloadFiles()
    searchDownloadedFiles()
    local reg = Reg:create("tmp")
    Reg:load(reg, "WONDER:\\temp\\nodenames.xml")
    local str = ""
    for j=1,#filesName do
        if string.match(filesName[j].name,"@") then
            local _,_,newNode = string.find(filesName[j].name,"(.+)@")
			newNode = filesName[j].name
			local xi,xj = string.find(filesName[j].name,"@")
			Log:write('loadDownloadFiles===1',xi,xj)
			Log:write('loadDownloadFiles===2',string.sub(filesName[j].name,xi+1,#filesName[j].name))
			--newNode = string.sub(filesName[j].name,xi+1,#filesName[j].name)
            if newNode then
                local s, e = string.find(str, newNode .. ',', nil, true)
                if s then
                    local sStr = string.sub(str, 1, s - 1)
                    local eStr = string.sub(str, e + 1, -1)
                    str = sStr .. eStr .. newNode .. ','
                else
                    str = str .. newNode .. ','
                end
            end
        end
    end
    local nodeNameTable = Util:split(str,",")
    local newTable = {}
    local contCount = 0
    for i=1,#nodeNameTable do
        if nodeNameTable[i] and nodeNameTable[i] ~= "" then
            local tmpTable = {}
            local tmpTableAudio = {}
            for j=#filesName,1,-1 do
                if string.find(filesName[j].name, nodeNameTable[i], nil, true) then
                    if isMediaAudio(filesName[j].path) then
                        table.insert(tmpTableAudio,filesName[j])
                        table.remove(filesName,j)
                    --else
                        --table.insert(tmpTable,filesName[j])
                        --table.remove(filesName,j)
                    end
                end
            end
            if #tmpTable > 0 then
                contCount = contCount + 1
                newTable[contCount] = {}
                newTable[contCount].setName = nodeNameTable[i] .. "_video"
                newTable[contCount].setList = tmpTable
            end
            if #tmpTableAudio > 0 then
                contCount = contCount + 1
                newTable[contCount] = {}
				 newTable[contCount].setName = nodeNameTable[i]
                --newTable[contCount].setName = nodeNameTable[i] .. "_audio"
				Log:write('setName =====',newTable[contCount].setName)
                newTable[contCount].setList = tmpTableAudio
            end
            if #tmpTable == 0 and #tmpTableAudio == 0 then
                nodeNameTable[i] = ""
            end
        end
    end
    --for j=1,#filesName do
        --if string.match(filesName[j].name,"@") then
        --else
            --if not newTable[contCount+1] then
                --newTable[contCount+1] = {}
                --newTable[contCount+1].setName = "未分类"
                --newTable[contCount+1].setList = {}
            --end
            --table.insert(newTable[contCount+1].setList, filesName[j])
        --end
    --end
	
	if downloadMember.m_tblDownloading~=nil and #downloadMember.m_tblDownloading>0 then
	for j=1,#downloadMember.m_tblDownloading do
	    contCount = contCount +1
		newTable[contCount] = {}
		--Log:write('dtest2count',contCount,downloadMember.m_tblDownloading[j].status,downloadMember.m_tblDownloading[j].title)
        Log:write('downloadindextest',contCount,j)
		newTable[contCount].setName = downloadMember.m_tblDownloading[j].title
        newTable[contCount].setList = downloadMember.m_tblDownloading[j]
		Log:write('dtest2count2', newTable[contCount].setList.title)
	end
	end
	Log:write('dtest2cc2',#newTable)
    for i , v in ipairs(newTable) do
        table.sort(v.setList, function(a, b)
            return a.sortname < b.sortname
        end)
    end
    local str = ""
    for i=1,#nodeNameTable do
        if nodeNameTable[i] and nodeNameTable[i] ~= "" then
            str = str .. nodeNameTable[i] .. ","
        end
    end
    Reg:setString(reg,"nodeNames",str)
    Reg:save(reg, "WONDER:\\temp\\nodenames.xml")
    Reg:release("tmp")
	Log:write('newTable',#newTable)
    return newTable
end

function isMediaAudio(strPath)
    if strPath and strPath ~= "" then
        if string.match(strPath,"tyaudiodownload") or string.match(strPath,"%.mp3$") then
            return true
        else
           return false
        end
    end
    return false
end


function searchDownloadedFiles()
	Log:write('searchDownloadedFiles===1')
    filesName = {}
    --searchMedia()
    searchMedia(1)
end

function searchMedia(bIsAudio)
    local flashCard = Util:getDownloadFolder(1,bIsAudio)
    local innerCard = Util:getDownloadFolder(0,bIsAudio)
    local filterStr = Config:get('video_type')
    local filterArr = Util:split(filterStr, '|')
    local count = #filterArr
	Log:write('searchMedia===1',innerCard)
	Log:write('searchMedia===2',flashCard)
    if flashCard and flashCard ~= '' then
        for i=1, count do
            --local files = IO:openDir(flashCard .. '\\' .. filterArr[i])
			local files = IO:openDir(flashCard)
			Log:write('searchMedia=====3',#files)
            filterFiles(files, flashCard)
        end
    end
    if innerCard ~= flashCard and innerCard and innerCard ~= '' then
        for i=1, count do
            --local files = IO:openDir(innerCard .. '\\' .. filterArr[i])
			local files = IO:openDir(innerCard)
			Log:write('searchMedia=====3',#files)
            filterFiles(files, innerCard)
        end
    end
 
end

function filterFiles(files, path)
    Log:write('=========filterFiles',#files)
    if files then
        local count = #files
        for i = 0, count do
			Log:write("filetest================1",files[i].filename)
			Log:write("filetest================2",files[i].attr)
			Log:write("filetest================3",files[i].createtime)
            if files[i].attr == 0 then 
			    Log:write("filetest================4这是文件",files[i].filename)
                if string.match(files[i].filename, '^temp') then
                else
                    local fileTable = {}
                    fileTable.name = files[i].filename
					Log:write('filterFiles===222',files[i].filename,path)
                    fileTable.path = path
                    local tmpName = string.gsub(fileTable.name,"上","001")
                    tmpName = string.gsub(tmpName,"中","002")
                    tmpName = string.gsub(tmpName,"下","003")
                    local _,_,episodeindex = string.find(tmpName,"-(%d+)%.")
                    if episodeindex then
                        tmpName = episodeindex
                    end
                    fileTable.sortname = tmpName
					Log:write('filterFiles===2',tmpName)
                    table.insert(filesName, fileTable)
                end
            end
        end
    end
end

tableLocalVideo = {}
tablePlaying = {}

--创建本地播放列表
function createLocalList()
    tableLocalVideo = loadDownloadFiles()
    Log:write("tableLocalVideo",#tableLocalVideo)
   
    tablePlaying = {}

    blankImgNodeIds = ""
    if tableLocalVideo and tableLocalVideo[1] then
		ListView:removeAllItems(downloadListview, 1, 1)
	    ListView:loadItem(downloadListview,downloadItem,math.ceil(#tableLocalVideo),'loadDownloadItem')
		ListView:adjust(downloadListview) 
        local audioCount = 0
        for i=1,#tableLocalVideo do
            if string.match(tableLocalVideo[i].setName,"_audio") then
                audioCount = audioCount + 1
            end
        end
        if audioCount == 0 then
            --setNodeState(subListview2Tips,mediatabtable[2])
            --Sprite:setProperty(subListview2TipsLbl,"text","暂无缓存完成的音频")
        elseif audioCount == #tableLocalVideo then
            --setNodeState(subListview2Tips,-mediatabtable[2]+1)
            --Sprite:setProperty(subListview2TipsLbl,"text","暂无缓存完成的视频")
        end
    else
        --setNodeState(subListview2Tips,1)
        --Sprite:setProperty(subListview2TipsLbl,"text","暂无缓存完成的内容")
		ListView:removeAllItems(downloadListview, 1, 1)
		ListView:loadItem(downloadListview, nullItem, 1, 'loadNullItem')
    end
    --ListView:loadItem(subListview2, nullItem, 1, 'loadNullItem')
    ListView:adjust(downloadListview)
    --setSpaceTip()
    if blankImgNodeIds ~= "" then
       Http:request('nodeImgData', Util:getServer() .. Alias.nodeImgData .. '?' .. "nodeId=" .. blankImgNodeIds, 101)
    end
end

function loadNullItem(list, item, index)
    Sprite:setRect(item, 0, 0, 720, 125)
    Sprite:setProperty(item, 'extendstyle', '1010')
end

--[[  加载小说列表数据方法 ]]--
function LoadDownLoadListViewData()
	ListView:removeAllItems(downloadListview, 1, 1)
    ListView:loadItem(downloadListview,downloadItem,math.ceil(#downloadMember.m_tblDownloading+1),'loadDownloadItem')
	ListView:adjust(downloadListview) 
end

--[[  加载下载列表ITEM数据方法 ]]--
function loadDownloadItem2(list,item,index)
	 Sprite:setProperty(item,"extendstyle","1070")
     Sprite:setRect(item,0,0,720,160)
	 --if novelListData.contentList[index].limg ~= nil then
	 --Sprite:setProperty(Sprite:findChild(item,'novelImage'),'src',novelListData.contentList[index].limg)
	 --else
	 --Sprite:setProperty(Sprite:findChild(item,'novelImage'),'src',novelListData.contentList[index].cimg)
	 --end
	 Sprite:setProperty(Sprite:findChild(item,'novelName'),'text',downloadMember.m_tblDownloading[index].title)
	 --Sprite:setProperty(Sprite:findChild(item,'novelAuthor'),'text',novelListData.contentList[index].author)
	 --Sprite:setProperty(Sprite:findChild(item,'novelAnchor'),'text',downloadMember.m_tblDownloading[index].title)
	 --local param=novelListData.contentList[index].param..'parentId='..parentId..';'
	 Log:write('isurl=========1===',downloadMember.m_tblDownloading[index].remote)
	 --Sprite:setProperty(Sprite:findChild(item,'novelItemBtn'),'data',param)
end

function loadDownloadItem(list,item,index)
	 regNodeInfo = Reg:create("localNodeInfo")
      Reg:load(regNodeInfo, "WONDER:\\temp\\nodeInfo.xml")
   	Sprite:setProperty(item,"extendstyle","1070")
    Sprite:setRect(item,0,0,720,160)
	
	downloadoptionBtn = Sprite:findChild(item,'downloadoptionBtn')
	rimg = Sprite:findChild(item,'rimg')
	deleteBtn = Sprite:findChild(item,'deleteBtn')
	if not IfDelete then
	   Sprite:setVisible(rimg, 1)
       Sprite:setVisible(deleteBtn, 0)
	   Sprite:setEnable(deleteBtn, 0)  
       Sprite:setEnable(downloadoptionBtn, 1) 
	   Sprite:setVisible(downloadoptionBtn, 1) 	   
	else 
	   Sprite:setVisible(rimg, 0)
       Sprite:setVisible(deleteBtn, 1)
	   Sprite:setEnable(deleteBtn, 1)  
       Sprite:setEnable(downloadoptionBtn, 0)  	   
	   Sprite:setVisible(downloadoptionBtn,0)
	end
	
	--local setName = string.gsub(tableLocalVideo[index+1].setName,"_[^_.]+","")
	local setName = tableLocalVideo[index+1].setName
	local setName2
	local setName22
	Log:write('loadDownloadItem=====0',setName)
	local xi,xj = string.find(setName,"@")
	local ti,tj = string.find(setName,"temp")
	if xi~=nil and xi>0 then
		setName2 = string.sub(setName,xi+1,#setName)
		local diani,dianj,diant = string.find(setName2,"%.")
		if diani~=nil and diani > 0 then
			Log:write('loadDownloadItem===1',setName2,diani,diant)
			setName22 = string.sub(setName2,1,diani-1)
			Sprite:setProperty(Sprite:findChild(item,'novelName'),'text',setName22)
		else
			Sprite:setProperty(Sprite:findChild(item,'novelName'),'text',setName2)
		end
	elseif ti~=nil then
	    local setName2 = string.sub(setName,tj+1,#setName)
		Log:write('loadDownloadItem===temp',setName2)
		Sprite:setProperty(Sprite:findChild(item,'novelName'),'text',setName)
	end

	--novelAnchor
	Log:write('================setName3','`````')
	local itemStatus = tableLocalVideo[index+1].setList.status
	if itemStatus ~= nil then
	    local downloadId = tableLocalVideo[index+1].setList.id
		Log:write('statustest',itemStatus)
		if itemStatus == 3 then
			local totalSize = tableLocalVideo[index+1].setList.maxsize
			local curSize = tableLocalVideo[index+1].setList.size
			local bili = math.floor(curSize/totalSize*100)
		    Sprite:setProperty(Sprite:findChild(item,'downloadStatus'),'text','已下载'..bili..'%')
			Sprite:setProperty(Sprite:findChild(item,'downloadoptionBtn'),'data','op=start;id='..downloadId..';')
			
			Sprite:setProperty(Sprite:findChild(item,'deleteBtn'),'data','op=d;id='..downloadId..';')  --op=d 表示在下载队列里
			
			Sprite:setProperty(Sprite:findChild(item,'downloadoptionLbl'),'text','下载'..downloadId)
		elseif itemStatus ==5 then
			Sprite:setProperty(Sprite:findChild(item,'downloadStatus'),'text','下载失败')
		elseif itemStatus ==0 then
			Sprite:setProperty(Sprite:findChild(item,'downloadStatus'),'text','等待下载')
			Sprite:setProperty(Sprite:findChild(item,'downloadoptionLbl'),'text','等待')
		elseif itemStatus == 2 then
			local totalSize = tableLocalVideo[index+1].setList.maxsize
			local curSize = tableLocalVideo[index+1].setList.size
			local bili = math.floor(curSize/totalSize*100)
		    Sprite:setProperty(Sprite:findChild(item,'downloadStatus'),'text','已下载'..bili..'%')
			Sprite:setProperty(Sprite:findChild(item,'downloadoptionBtn'),'data','op=pause;id='..downloadId..';')
			
			Sprite:setProperty(Sprite:findChild(item,'deleteBtn'),'data','op=d;id='..downloadId..';')  --op=d 表示在下载队列里
			
			Sprite:setProperty(Sprite:findChild(item,'downloadoptionLbl'),'text','暂停')
		end
	else
		 Sprite:setProperty(Sprite:findChild(item,'downloadStatus'),'text','已下载'..'100%')
		 Sprite:setProperty(Sprite:findChild(item,'downloadoptionLbl'),'text','播放')
		 
		 Sprite:setProperty(Sprite:findChild(item,'deleteBtn'),'data','op=b;index='..(index+1)..';name='..setName..';')  --op=b 表示在本地
		 
		 Sprite:setProperty(Sprite:findChild(item,'downloadoptionBtn'),'data','op=play;index='..(index+1)..';name='..setName22..';')
	end
	
	local _,_,setName3 = string.find(setName,"(.+)@")
	Log:write('================setName3',setName3)
	local md5Name = Util:md5(setName3)
	local noedInfoTable = Reg:getTable(regNodeInfo,md5Name)
	Log:write('================setName4',noedInfoTable==nil,noedInfoTable.count,noedInfoTable.img)

	if noedInfoTable and noedInfoTable.count and noedInfoTable.img then
	    Log:write('================setName5',noedInfoTable==nil,noedInfoTable.count,noedInfoTable.anchor)
		if noedInfoTable.anchor == nil or noedInfoTable.anchor == '' then
			--Sprite:setProperty(Sprite:findChild(item,'novelAnchor'),'text',noedInfoTable.anchor)
			blankImgNodeIds = blankImgNodeIds .. noedInfoTable.nodeId .. ","
		else
			Sprite:setProperty(Sprite:findChild(item,'novelAnchor'),'text',noedInfoTable.anchor)
		end
        Sprite:setProperty(Sprite:findChild(item,'downloadItemImage'),'src',noedInfoTable.img)
        if (noedInfoTable.nodeId and not IO:fileExist(noedInfoTable.img)) or noedInfoTable.anchor == nil or noedInfoTable.anchor == '' then
            blankImgNodeIds = blankImgNodeIds .. noedInfoTable.nodeId .. ","
			--Sprite:setProperty(Sprite:findChild(item,'novelItemBtn'),'data',noedInfoTable.nodeId)
			Sprite:setProperty(item,"data",noedInfoTable.nodeId)
        end
    else
		Sprite:setProperty(Sprite:findChild(item,'downloadItemImage'),'src','file://image/defaultbg.png')
	end
	
end

function getDownloadStatus()
	createDownloadingList()
	createLocalList()
    Timer:set(30,1000,"getDownloadStatus")
end

function downloadoptionBtnOnSelect(sprite)
	local item=Sprite:getParent(sprite)
	local index=ListView:getItemIndex(item)

	local data = Sprite:getData(sprite)
	local _,_,op=string.find(data,'op=(%a-);')
	local _,_,did=string.find(data,'id=(%d-);')
	Log:write('downloadoptionBtnOnSelect====',op,did)
	
	if op~=nil and op == 'play' then	--go播放
		Timer:cancel(30)
		Timer:cancel(30)
	    local anchorLbl = Sprite:findChild(item, 'novelAnchor') 
		local aData = Sprite:getProperty(anchorLbl, 'text') 
		local _,_,dindex = string.find(data,'index=(%d-);')
		local _,_,dname = string.find(data,'name=(.+);')
		
		Log:write('downloadoptionBtnOnSelect2====',aData)
		Log:write('downloadoptionBtnOnSelect2====',tableLocalVideo[dindex+0].setList[1].path)
		Log:write('downloadoptionBtnOnSelect2====',tableLocalVideo[dindex+0].setName)
	
	    local reg = Reg:create('com_wondertek_mobileaudio_localplay')
		Reg:setString(reg,'audioplayCollect','3')
		Reg:setTable(reg,'audioplayCollectTable',tableLocalVideo)
		Reg:setString(reg,'novelItemIndex',dindex)
		Reg:setString(reg,'novelItemTitle',dname)
		Reg:setString(reg,'novelAuthor',aData)

		Scene:go('MODULE:\\com_wondertek_mobileaudio\\audioplaylocal.wdml',{freeDestScene=true})
	elseif op~=nil and op == 'pause' then  --go暂停
	    local xid = Download:getIndexById(did+0)
		Download:pause(xid+0) 
	elseif op~=nil and op == 'start' then --go开始下载
		--downloadMember.m_b2G3GDownload = Config:get('autoDownload') == "1" and true or false
        if (Http:getCurConnect() == 'CMWAP' or Http:getCurConnect() == 'CMNET') and not downloadMember.m_b2G3GDownload then
            Dialog:show('提示', '亲，忘了设置过移动网络不缓存了？', 'ok_cancel', 'goSetting', nil, '设置')
            return
        end
	    local xid = Download:getIndexById(did+0)
		Download:start(xid+0) 
		Log:write('downloadoptionBtnOnSelect2====',op,did)
	end	
end

function deleteBtnOnSelect(sprite)
	local data = Sprite:getData(sprite)
	local _,_,op=string.find(data,'op=(%a-);')
	local _,_,did=string.find(data,'id=(%d-);')
	Log:write('deleteBtnOnSelect====================1',op)
	if op == 'b' then	
		local _,_,dindex = string.find(data,'index=(%d-);')
		local _,_,dname = string.find(data,'name=(.+);')
		Log:write('deleteBtnOnSelect====================2',dindex,dname)
		Log:write('deleteBtnOnSelect====================3',tableLocalVideo[dindex+0].setList[1].path)
		delPath = tableLocalVideo[dindex+0].setList[1].path..dname
		delFlag = 1
		Dialog:show('', '是否确认删除该任务？', 'ok_cancel', 'Delete_cancel')
	else
		delId = did+0
	end
end


--点击管理按钮
function managerBtnOnSelect(sprite)
	Download:pause()
    local managername=Sprite:findChild(sprite, 'managername')
	if Sprite:getText(managername) =='管理' then
    Sprite:setProperty(managername,'text','完成')
	IfDelete=true
	elseif  Sprite:getText(managername) =='完成' then
	Sprite:setProperty(managername,'text','管理')
	IfDelete=false
	end	
end

--[[
 ------------------------------------------------------------
 -- @function Dialog:show(title, message, typeStr, okCallback, cancelCallback, okText, cancelText, checkBoxCallback, checkBoxText, isChecked)
 ------------------------------------------------------------
 -- @brief 显示对话框
 ------------------------------------------------------------
 -- @param string title 对话框标题
 -- @param string message 对话框内容
 -- @param string typeStr 对话框类型，'ok'、'cancle'、'ok_cancel'
 -- @param string okCallback 确定回调函数名，可空
 ------------------------------------------------------------
 -- @return void
 ------------------------------------------------------------
 --]]
function Dialog:show(title, message, typeStr, okCallback)
    local curScene = Sprite:getCurScene()
    Sprite:sendEvent(curScene, Msg.dialogShow)
    local mainNode = Sprite:findChild(curScene, 'mainNode')
    local dialogNode = Sprite:findChild(curScene, 'dialogNode')
    if dialogNode ~= 0 then
        setNodeState(dialogNode, 1)
    else
        dialogNode = Sprite:create('node', Sprite:findChild(curScene, 'mainNode'))
        Sprite:setProperty(dialogNode, 'name', 'dialogNode')
		Sprite:loadFromString(dialogNode, Dialog.layout)
    end
	local dtext = Sprite:findChild(dialogNode, 'dtext')
	local okBtn = Sprite:findChild(dialogNode, 'okBtn')
	local cancelBtn = Sprite:findChild(dialogNode, 'cancelBtn')
    Sprite:setProperty(dtext, 'text', message)
end

--Dialog确定按钮
function _okProc()
	if delFlag == 1 then
		Log:write('=================_okProc',delPath)
		local re = IO:fileRemove(delPath) 
		if re then
			Tips:show('删除成功')
		else
			Tips:show('删除失败')
		end
	else
		local xid = Download:getIndexById(delId+0)
		Download:delete(xid+0,true) 
	end
	Dialog:close()
end

--Dialog取消按钮
function _cancelProc()
	Dialog:close()
end

Dialog.layout = [[
<?xml version="1.0" encoding="utf-8"?>
<root>
    <header/>
    <body>
        <button rect="0,0,720,1280" OnSelect="" extendstyle="1111"/>
        <shadow rect="0,0,720,1280" color="#000000" alpha="70" extendstyle="1111"/>
        <node name="dframe" rect="54,475,612,230" extendstyle="1010">
            <image rect="0,0,612,230" src="file://image/dialogbg.png"  style="sudoku-auto" sudoku="5,5,5,5" extendstyle="1017" />
            <textarea name="dtext" text="" rect="80,0,460,100" extendstyle="1010" font-size="28" color="#7F7B7A" line-height="25" h-align="center" v-align="center" loop="true" step="1"/>
            <node name="btnArea" rect="34,120,544,77" extendstyle="0010">
                <button name="okBtn" rect="0,0,255,77" style="autosize" OnSelect="_okProc" extendstyle="1510" normal="n" sel="s">
                    <node name="n" rect="0,0,255,77" extendstyle="1010" >
					    <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1010" />
                        <label name="textOkN" rect="0,0,255,77" extendstyle="1010" text="确定" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                    <node name="s" rect="0,0,255,77" extendstyle="1010" frame="true">
                        <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1010" />
                        <label name="textOkF" rect="0,0,255,77" extendstyle="1010" text="确定" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                </button>
                <button name="cancelBtn" rect="289,50,255,77" OnSelect="_cancelProc" extendstyle="1570" normal="n" sel="s" disabled="d">
                    <node name="n" rect="0,0,255,77" extendstyle="1010" >
					    <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1070"/>
                        <label name="textCancelN" rect="0,0,255,77" extendstyle="1010" text="取消" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                    <node name="s" rect="0,0,255,77" extendstyle="1070" frame="true">
                        <image rect="0,0,255,77" src="file://image/dialogbtnbg.png"  style="sudoku-auto" sudoku="11,11,11,11" extendstyle="1070"/>
                        <label name="textCancelF" rect="0,0,255,77" extendstyle="1010" text="取消" font-size="30" color="#000000" v-align="center" h-align="center"/>
                    </node>
                </button>
            </node>
        </node>
    </body>
</root>
]]



]]>