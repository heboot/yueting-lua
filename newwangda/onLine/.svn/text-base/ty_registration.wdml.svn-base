local treatyText = ''
matchTable = {
    '^13[4-9]%d%d%d%d%d%d%d%d$',
    '^15[0-27-9]%d%d%d%d%d%d%d%d$',
    '^18[2378]%d%d%d%d%d%d%d%d$',
    '^147%d%d%d%d%d%d%d%d$'
}

function bodyBuildChildrenFinished(sprite)
    rootSprite= sprite
    title = Sprite:findChild(sprite, "title")
    mainListview = Sprite:findChild(sprite, "mainListview")
    acceptItem = Sprite:findChild(sprite, "acceptItem")
    accountName = Sprite:findChild(sprite, "accountName")
    dynamicCode = Sprite:findChild(sprite, "dynamicCode")
    passWord = Sprite:findChild(sprite, "passWord")
    passWordConfirm = Sprite:findChild(sprite, "passWordConfirm")
    pwdLbl = Sprite:findChild(sprite, "pwdLbl")
    getDynamicCodeBtn = Sprite:findChild(sprite, "getDynamicCodeBtn")
    normalLbl = Sprite:findChild(sprite, "normalLbl")
    selectLbl = Sprite:findChild(sprite, "selectLbl")
    disableLbl = Sprite:findChild(sprite, "disableLbl")
    confirmBtn = Sprite:findChild(sprite, "confirmBtn")
    confirmLblN = Sprite:findChild(sprite, "confirmLblN")
    confirmLblS = Sprite:findChild(sprite, "confirmLblS")
    treatyDialog = Sprite:findChild(sprite, 'treatyDialog')
    textareaListview = Sprite:findChild(sprite, 'textareaListview')
    textareaItem = Sprite:findChild(sprite, 'textareaItem')
    treatyInfo = Sprite:findChild(sprite, 'treatyInfo')
    Sprite:setProperty(treatyInfo, 'text', treatyText)
    local _,_,_,h = Sprite:getRect(treatyInfo)
    Sprite:setRect(textareaItem,0,0,620,h)
    ListView:adjust(textareaListview)
	
end

function backOnSelect(sprite)
    Scene:back()
end

--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
    if msg == Msg.dynPwd then
        local dynPwdResult = Http:jsonDecode('dynPwdResult')
        Log:write('dynPwdResult', dynPwdResult)
        if type(dynPwdResult) == 'table' then
            Tips:show(dynPwdResult.desc)
        else
            Dialog:show('提示', '亲，好像出了点状况', 'ok')
        end
    elseif msg == Msg.register then
        Loading:close()
        local registerResult = Http:jsonDecode('registerResult')
        Log:write('registerResult', registerResult)
        if type(registerResult) == 'table' then
            if registerResult.success == 'true' and registerResult.code == '017' then
                Dialog:show('提示', registerResult.desc, 'ok', 'backOnSelect', nil, '返回')
            elseif registerResult.code == '007' then
                Dialog:show('提示', '用户已存在，请使用找回密码功能', 'ok', 'backOnSelect')
            else
                Tips:show(registerResult.desc)
            end
        else
            Dialog:show('提示', '亲，好像出了点状况', 'ok')
        end
    elseif msg == Msg.reset then
        Loading:close()
        local resetResult = Http:jsonDecode('resetResult')
        Log:write('resetResult', resetResult)
        if type(resetResult) == 'table' then
            if resetResult.success == 'true' and resetResult.code == '015' then
                lastPhoneNum = lastPhoneNum or ''
                if lastPwd and lastPwd ~= '' then
                    Log:write('sendResetMsg')
                    local postData = 'phoneNumber=' .. lastPhoneNum .. '&message=您已成功使用悦听客户端修改了登录密码，密码为' .. string.sub(lastPwd, 1, 1) .. '****' .. string.sub(lastPwd, string.len(lastPwd))
                    Http:request('sendMsg', Util:getServer() .. 'msp/pushFriendRecommend.msp?', 111, {method = 'post', useCache = 0, postData = postData})
					
					Tips:show('密码重置成功，请重新登录')
			   end
                --Dialog:show('提示', resetResult.desc, 'ok', 'backOnSelect', nil, '返回')
            else
                Tips:show(resetResult.desc)
            end
        else
            Dialog:show('提示', '亲，好像出了点状况', 'ok')
        end
    else
        Util:onPluginEvent(msg, param)
    end
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
		Bottom:show()
        commonActivate()
        init()
    elseif msg == MSG_DEACTIVATE then
        Timer:cancel(1)
        commonDeactivate()
        Scene:freeByHandle(rootSprite)
    else
        Util:onSpriteEvent(msg, param)
    end
end

--[[  按键事件响应  ]]--
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then
        if Sprite:isVisible(treatyDialog) == 1 then
            Sprite:setVisible(treatyDialog,0)
            Sprite:setEnable(treatyDialog,0)
        else
            if commonF2KeyUp and commonF2KeyUp() then return end
            Scene:back()
        end
    else
        Util:mainNodeOnKeyUp(sprite, kc)
    end
end

function acceptBtnOS(sprite)
    accepted = setCheck(sprite) == 1 -- true已接受，false未接受
end

function setCheck(sprite)
    local checkBoxF = Sprite:findChild(sprite, "checkBoxF")
    local isVisible = Sprite:isVisible(checkBoxF)
    status = isVisible == 0 and 1 or  0
    Sprite:setVisible(checkBoxF, status)
    return status
end

function editOnTextChanged(sprite)
    local p = Sprite:getParent(sprite)
    local blankTip = Sprite:findChild(p,"blankTip")
    if Sprite:getText(sprite) == "" then
        setNodeState(blankTip,1)
    else
        setNodeState(blankTip,0)
    end
end

function check()
    local phoneNum = Sprite:getText(accountName)
    local pwd = Sprite:getText(passWord)
    local dynamicNum = Sprite:getText(dynamicCode)
    local pwdConfirm = Sprite:getText(passWordConfirm)
    if phoneNum == '' then
        --Dialog:show('提示', '请输入手机号', 'ok')
		Tips:show('请输入手机号')
        return
    end
    if pwd == '' then
        --Dialog:show('提示', '请输入密码', 'ok')
		Tips:show('请输入密码')
        return
    end
    if dynamicNum == '' then
        --Dialog:show('提示', '请输入验证码', 'ok')
		Tips:show('请输入验证码')
        return
    end
    if pwd ~= pwdConfirm then
        --Dialog:show('提示', '两次密码输入不一致', 'ok')
		Tips:show('两次密码输入不一致')
        return
    end
    lastPhoneNum = phoneNum
    lastPwd = pwd
    pwd = Net:pwdEncode(pwd)
--    if not accepted then
--        Dialog:show('提示', '请阅读并接受条款', 'ok')
--        return
--    end
    return 'phoneNumber=' .. phoneNum .. '&password=' .. pwd .. '&dynamicCode=' .. dynamicNum
end

--[[  注册  ]]--
function registerBtnOS(sprite)
    local postData = check()
    if not postData then
        return
    end
    Log:write('url=', Util:getServer() .. 'msp/register.msp' .. postData)
    Loading:show()
    Http:request('registerResult', Util:getServer() .. 'msp/register.msp', Msg.register, {method = 'post', useCache = 0, postData = postData})
end

--[[  找回密码  ]]--
function resetBtnOS(sprite)
    local postData = check()
    if not postData then
        return
    end
    Log:write('url=', Util:getServer() .. 'msp/resetPwd.msp' .. postData)
    Loading:show()
    Http:request('resetResult', Util:getServer() .. 'msp/resetPwd.msp', Msg.reset, {method = 'post', useCache = 0, postData = postData})
end

--[[  获取验证码  ]]--
function getDynamicCodeBtnOS(sprite)
    Log:write('getDynamicCodeBtnOS')
    local phoneNum = Sprite:getText(accountName)
    if phoneNum == '' then
        --Dialog:show('提示', '请输入手机号', 'ok')
		Tips:show('请输入手机号')
        return
    elseif not matchPhoneNum(phoneNum) then
        Tips:show("注册仅支持中国移动手机号码")
        return
    end
    Log:write('url=', Util:getServer() .. 'msp/sendDynPwd.msp?phoneNumber=' .. phoneNum)
    Http:request('dynPwdResult', Util:getServer() .. 'msp/sendDynPwd.msp?phoneNumber=' .. phoneNum, Msg.dynPwd, {useCache = 0})
    disableTimer()
end

function disableTimer()
    remainSecond = 30
    Sprite:setProperty(disableLbl, 'text', remainSecond .. '秒后重新获取')
    Sprite:setEnable(getDynamicCodeBtn, 0)
    Timer:set(1, 1000, 'changeTime')
end

function changeTime()
    if remainSecond <= 1 then
        remainSecond = 30
        Sprite:setProperty(normalLbl, 'text', '重新获取验证码')
        Sprite:setProperty(selectLbl, 'text', '重新获取验证码')
        Sprite:setEnable(getDynamicCodeBtn, 1)
    else
        remainSecond = remainSecond - 1
        Sprite:setProperty(disableLbl, 'text', remainSecond .. '秒后重新获取')
        Timer:set(1, 1000, 'changeTime')
    end
end

--[[  协议"知道了"按钮点击  ]]--
function treatyBtnOkOnSelect()
    Sprite:setVisible(treatyDialog,0)
    Sprite:setEnable(treatyDialog,0)
end

--[[  阅读协议  ]]--
function treatyOnSelect(sprite)
    Sprite:setVisible(treatyDialog,1)
    Sprite:setEnable(treatyDialog,1)
end

--[[  初始化注册/找回密码  ]]--
function init()
    --暂时在注册时页屏蔽协议选项
    local x, y, w = Sprite:getRect(acceptItem)
    Sprite:setRect(acceptItem, x, y, w, 0)
    Sprite:setEnable(acceptItem, 0)
    ListView:adjust(mainListview)
    local reg = Reg:create(Reg.com_wondertek_mobileaudio.myaccount)
    if Reg:getInteger(reg, 'isRegister') ~= 1 then
        Sprite:setProperty(title, 'text', '找回密码')
        local p = Sprite:getParent(pwdLbl)
        local blankTip = Sprite:findChild(p, "blankTip")
        local passWord = Sprite:findChild(p, "passWord")
        Sprite:setRect(pwdLbl, 20, 0, 145, 85)
        Sprite:setRect(blankTip, 165, 0, 480, 85)
        Sprite:setRect(passWord, 165, 0, 480, 85)
        Sprite:setProperty(confirmBtn, 'OnSelect', 'resetBtnOS')
        Sprite:setProperty(confirmLblN, 'text', '确定')
        Sprite:setProperty(confirmLblS, 'text', '确定')
    end
end

--[[ 移动手机号码正则 ]]--
function matchPhoneNum(str)
    for i, v in ipairs(matchTable) do
        if string.match(str, v) then
            return str
        end
    end
    return nil
end



function cleanAccountBtnOnSelect(sprite)
	Sprite:setProperty(accountName,'text','')
end

function cleanPasswordBtnOnSelect(sprite)
	Sprite:setProperty(passWord,'text','')
end

function cleanPassword2BtnOnSelect(sprite)
	Sprite:setProperty(passWordConfirm,'text','')
end

function cleanCheckcodeBtnOnSelect(sprite)
	Sprite:setProperty(dynamicCode,'text','')
end