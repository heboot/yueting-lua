LOCAL_SCANAUDIOITEM_HEIGHT  = 90
local desFilePath

function bodyBuildChildrenFinished(sprite)
     rootSprite = sprite
	 scanLoadingNode = Sprite:findChild(sprite, "scanLoadingNode")
     subListview3 = Sprite:findChild(sprite, "subListview3")
     subListview3Tips = Sprite:findChild(sprite, "subListview3Tips")
     scanTips = Sprite:findChild(sprite, "scanTips")
     accessibleListAItem = Sprite:findChild(sprite,"accessibleListAItem")
end

--[[  插件消息方法  ]]--
function bodyOnPluginEvent(msg, param)
    if msg == 101 then
        Loading:close()   
        Timer:set(TimerId.once,1000,"backBtnOnSelect")
    else
        Util:onPluginEvent(msg, param)
    end
end

--[[  节点消息方法  ]]--
function bodyOnSpriteEvent(msg, param)
     if msg == MSG_ACTIVATE then
		 Bottom:show()
         commonActivate()
		 createAccessibleList()
     elseif msg == MSG_DEACTIVATE then
         commonDeactivate()
         Scene:freeByHandle(rootSprite)
     else
         Util:onSpriteEvent(msg, param)
     end
end

--[[  按键事件响应  ]]--
function mainNodeOnKeyUp(sprite, kc)
     if kc == Key.F2 then
         if commonF2KeyUp and commonF2KeyUp() then return end
         Scene:back()
     else
         Util:mainNodeOnKeyUp(sprite, kc)
     end
end

function backBtnOnSelect(sprite)
     Scene:back()
end


function createAccessibleList()
     tableScanVideo= getScanList()
	 Config:set('localFileCount',#tableScanVideo)
     ListView:removeAllItems(subListview3, 1, 1)
     if tableScanVideo and type(tableScanVideo) == 'table' and #tableScanVideo > 0 then
         setNodeState(subListview3Tips,0)
         ListView:loadItem(subListview3,accessibleListAItem, #tableScanVideo, 'onLoadAccessibleListItem2')
     else
         setNodeState(subListview3Tips,1)
     end
     Log:write("tableScanVideo",tableScanVideo)
end

function scanAccessibleList()
     local flashCard = System:getFlashCardName(1)
     local innerCard = System:getFlashCardName(0)
     if not (flashCard and flashCard ~= "") and not (innerCard and innerCard ~= "") then
         Tips:show("sd卡没插吧?")
         return
     end
     bIsscanLoading = 1
     ListView:removeAllItems(subListview3, 1, 1)
     setNodeState(scanLoadingNode,1)
     Sprite:setProperty(scanTips,"text","扫描中.." .. 0 .. "%")
     local filterArr = "*.mp3"
     tableScanVideo= {}
     local minResolution = SCREEN_WIDTH < SCREEN_HEIGHT and SCREEN_WIDTH or SCREEN_HEIGHT
     local pngquality = minResolution >= 720 and 100 or math.floor(100*minResolution/720)
     if flashCard and flashCard ~= '' then
         if innerCard ~= flashCard and innerCard and innerCard ~= '' then
             if not (string.match(innerCard,flashCard) or string.match(flashCard,innerCard)) then
                 bToExploreInner = 1
                 FileExplore(flashCard, filterArr, "testFunc", pngquality)
             else
                 FileExplore(innerCard, filterArr, "testFunc", pngquality)
             end
         else
             FileExplore(flashCard, filterArr, "testFunc", pngquality)
         end
     elseif innerCard ~= flashCard and innerCard and innerCard ~= '' then
         FileExplore(innerCard, filterArr, "testFunc", pngquality)
     end
end

function scanSecondCard()
     local innerCard = System:getFlashCardName(0)
     local filterArr = "*.mp3"
     local minResolution = SCREEN_WIDTH < SCREEN_HEIGHT and SCREEN_WIDTH or SCREEN_HEIGHT
     local pngquality = minResolution >= 720 and 100 or math.floor(100*minResolution/720)
     bToExploreInner = 2
     FileExplore(innerCard, filterArr, "testFunc", pngquality)
end

function testFunc(strFilePath, uSize, uCount, fileExplorePercent, pngFile)
     if strFilePath ~= "" and not string.match(strFilePath,"MobileVideoDownload") and tonumber(uSize) ~= 0 then
         table.insert(tableScanVideo,{name = strFilePath,size = uSize})
         _tmpData = tableScanVideo[#tableScanVideo]
         local _, _,path,name = string.find(_tmpData.name, "(.+[/])([^/].+)")
         _tmpData.name,_tmpData.path = name,path
         ListView:loadItem(subListview3,accessibleListAItem, 1, 'onLoadAccessibleListItem')
     end
     local fep = fileExplorePercent
     if bToExploreInner == 1 then
         fep = tonumber(fileExplorePercent)/2
     elseif bToExploreInner == 2 then
         fep = 50 + tonumber(fileExplorePercent)/2
     end
     if fep ~= 0 then
         Sprite:setProperty(scanTips,"text","扫描中.." .. math.ceil(fep).. "%")
     end
     if fileExplorePercent == 100 then
         if bToExploreInner == 1 then
             Timer:set(1,200,"scanSecondCard")
         else
             bToExploreInner = nil
             bIsscanLoading = nil
             setNodeState(scanLoadingNode,0)
             if #tableScanVideo ~= 0 then
                 saveScanList(tableScanVideo)
                 Tips:show("扫描完成")
                 setNodeState(subListview3Tips,0)
             else
                 Tips:show("没找到可以用的文件")
                 setNodeState(subListview3Tips,1)
             end
         end
     end
end

function onLoadAccessibleListItem(list,item,index)
     Sprite:setProperty(item, "extendstyle", "0010")
     Sprite:setRect(item, 0, 0, 720, LOCAL_SCANAUDIOITEM_HEIGHT)
     local setNamelbl,setNamelbl2 = Sprite:findChild(item, "setName"),Sprite:findChild(item, "setName2")
     local setName = _tmpData.name
     if string.find(setName, "@") then
         _, _, setName = string.find(setName, "@(.+)")
     end
     local _, _, setName = string.find(setName, "(.+)%.([^%.].+)")
     Sprite:setProperty(item, "data", _tmpData.name .. ';' .. _tmpData.path .. _tmpData.name)
     Sprite:setProperty(setNamelbl, "text", setName) Sprite:setProperty(setNamelbl2, "text", setName)
end

function onLoadAccessibleListItem2(list,item,index)
     Sprite:setProperty(item, "extendstyle", "0010")
     Sprite:setRect(item, 0, 0, 686, LOCAL_SCANAUDIOITEM_HEIGHT)
     local setNamelbl,setNamelbl2 = Sprite:findChild(item, "setName"),Sprite:findChild(item, "setName2")
     local setName = tableScanVideo[index+1].name
     if string.find(setName, "@") then
         _, _, setName = string.find(setName, "@(.+)")
     end
     local _, _, setName= string.find(setName, "(.+)%.([^%.].+)")
     Sprite:setProperty(item, "data", tableScanVideo[index+1].name .. ';' .. tableScanVideo[index+1].path .. tableScanVideo[index+1].name)
     Sprite:setProperty(setNamelbl, "text", setName) 
	 Sprite:setProperty(setNamelbl2, "text", setName)
end

function fileChooseOS(sprite)
	 local imgN = Sprite:findChild(sprite,"imgN")	
	 local imgF = Sprite:findChild(sprite,"imgF")	
     local count= ListView:getItemCount(subListview3)  
     for i=0,count-1 do
         local item = ListView:getItem(subListview3,i)
         local setBtn = Sprite:findChild(item,"setBtn")	 
         Sprite:setEnable(setBtn,1)
     end
     if bIsscanLoading == 1 then return end
     local item = Sprite:getParent(sprite)
     local data = Sprite:getData(item)	
     local dataTable = Util:split(data,';')   
     desFilePath = ""
     if dataTable and dataTable[1]~='' then
         desFilePath = dataTable[2]
     end
     if not IO:fileExist(desFilePath) then Tips:show("未找到文件") return end
     local reg = Reg:create(Reg.com_wondertek_mobileaudio.upload)
	 Sprite:setEnable(sprite,0)
     Reg:setString(reg,"filepath",desFilePath)
end

function saveScanList(tableScanVideo)
     local reg = Reg:create("tmpScan")
     Reg:load(reg, "WONDER:\\temp\\scanlist.xml")
     if tableScanVideo then Reg:setTable(reg,"tableScanVideo",tableScanVideo) end
     Reg:save(reg, "WONDER:\\temp\\scanlist.xml")
     Reg:release("tmpScan")
end

function getScanList()
     local reg = Reg:create("tmpScan")
     Reg:load(reg, "WONDER:\\temp\\scanlist.xml")
     local tableTmp = Reg:getTable(reg,"tableScanVideo")
     Reg:release("tmpScan")
     Log:write("tableScanVideo",tableTmp)
     return tableTmp
end

function scanCancel(bCreateList)
     Sprite:setProperty(scanLable_n,"text","扫描") Sprite:setProperty(scanLable_f,"text","扫描")
     bIsscanLoading = nil
     setNodeState(scanLoadingNode,0)
     bToExploreInner = nil
     CancelFileExplore()
     local item = ListView:getItem(subListview3,0)
     ListView:removeItem(subListview3,item,1,1)
     Tips:show("扫描终止")
     if bCreateList then
         createAccessibleList()
     end
end

--确认上传按钮
function uploadworksBtnOnSelect(sprite)
     if desFilePath~='' and desFilePath ~=nil then
         Scene:go(Alias.uploadworks, {setReturn=false})
	 else
	 Tips:show("未选择作品")
	 end
end
--录音按钮
function goRecordingBtnOnSelect(sprite)
     Scene:go(Alias.recording,{freeDestScene=true})
end

--扫描按钮
function scanBtnOnSelect(sprite)
     local flashCard = System:getFlashCardName(1)
     local innerCard = System:getFlashCardName(0)
     if not (flashCard and flashCard ~= "") and not (innerCard and innerCard ~= "") then
         Tips:show("sd卡没插吧?")
         return
     end
     bIsscanLoading = 1
     ListView:removeAllItems(subListview3, 1, 1)
     setNodeState(scanLoadingNode,1)
     Sprite:setProperty(scanTips,"text","扫描中.." .. 0 .. "%")
     local filterArr = "*.mp3"
     tableScanVideo= {}
     local minResolution = SCREEN_WIDTH < SCREEN_HEIGHT and SCREEN_WIDTH or SCREEN_HEIGHT
     local pngquality = minResolution >= 720 and 100 or math.floor(100*minResolution/720)
     if flashCard and flashCard ~= '' then
         if innerCard ~= flashCard and innerCard and innerCard ~= '' then
             if not (string.match(innerCard,flashCard) or string.match(flashCard,innerCard)) then
                 bToExploreInner = 1
                 FileExplore(flashCard, filterArr, "testFunc", pngquality)
             else
                 FileExplore(innerCard, filterArr, "testFunc", pngquality)
             end
         else
             FileExplore(flashCard, filterArr, "testFunc", pngquality)
         end
     elseif innerCard ~= flashCard and innerCard and innerCard ~= '' then
         FileExplore(innerCard, filterArr, "testFunc", pngquality)
     end
end